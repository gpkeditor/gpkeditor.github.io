{"version":3,"sources":["webpack:///static/js/app.3a5b8cb6b074629db0d0.js","webpack:///./src/main.js","webpack:///App.vue","webpack:///GPKEditor.vue","webpack:///Index.vue","webpack:///./src/gpkparser/index.js","webpack:///./src/gpkparser/parser.js","webpack:///./src/routers.js","webpack:///./src/App.vue","webpack:///./src/gpkeditor/GPKEditor.vue","webpack:///./src/pages/Index.vue","webpack:///./src/pages/Index.vue?e082","webpack:///./src/gpkeditor/GPKEditor.vue?61f8","webpack:///./src/App.vue?b96b"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_routers","_routers2","router","el","template","components","App","Object","defineProperty","value","name","getLineNumberAndColumnIndex","textarea","textLines","substr","selectionStart","split","currentLineNumber","length","currentColumnIndex","console","log","line","index","insertAtCursor","myField","myValue","document","selection","focus","sel","createRange","text","select","startPos","endPos","selectionEnd","beforeValue","substring","afterValue","_index","_index2","_markdown","_markdown2","regex","data","input","info","computed","compiledMarkdown","this","methods","update","e","_this","target","setTimeout","keyCode","enter","array","top","result","exec","i","indexOf","begin","_GPKEditor","_GPKEditor2","gpk-editor","parseDom","h_reg","dom","currentLinks","type","undefined","findChildrens","rows","content","map","sub","join","language","mapTable","forEach","subEl","_typeof","call","th","head","tb","body","url","img","lis","mapList","anchor","findLink","links","toLowerCase","mapAll","callback","Symbol","iterator","constructor","prototype","p","markdown","parse","getLinks","getDom","peg$subclass","child","parent","ctor","peg$SyntaxError","message","expected","found","location","Error","captureStackTrace","peg$parse","options","peg$literalExpectation","ignoreCase","peg$classExpectation","parts","inverted","peg$endExpectation","peg$otherExpectation","description","peg$computePosDetails","pos","details","peg$posDetailsCache","column","charCodeAt","peg$computeLocation","startPosDetails","endPosDetails","start","offset","end","peg$fail","peg$currPos","peg$maxFailPos","peg$maxFailExpected","push","peg$buildStructuredError","buildMessage","peg$parsemarkdown","s0","s1","s2","peg$parseparagraph","peg$FAILED","peg$savedPos","peg$c0","s3","s4","peg$parse_","peg$parseparagraph_content","peg$c1","peg$parseheading","peg$parseglobal_link_list","peg$parsequote_list","peg$parsequote","peg$c2","peg$parsecode","peg$parseul_list","peg$parseul_li","peg$parsetable","peg$parsea_img","peg$parsea","peg$parseimg","peg$parseline","peg$parsestrong","peg$parseannotation","peg$parseplain_text_paragraph","peg$c3","peg$c4","peg$silentFails","peg$c5","peg$c6","peg$c7","peg$parsetext","peg$c8","peg$c9","peg$c10","peg$c11","s5","peg$c12","peg$parsetable_tr","peg$c13","peg$c14","peg$c15","peg$parsetable_item","peg$c16","peg$c17","peg$c18","peg$parsetable_text_formated","peg$c19","peg$parseformated_text","peg$parsetable_text","peg$c20","test","charAt","peg$c21","peg$c22","peg$parseul_li_item","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$parsea_img_text","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$parsecode_rows","peg$c50","peg$parsecode_rows_text","peg$c51","peg$c52","peg$c53","peg$c54","peg$parsetext_single","peg$parsenormal_text","peg$c55","peg$c56","peg$parseanchor_with_name","peg$parseanchor","peg$parseinline_code","peg$parseem","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$parseglobal_link_text","peg$c66","peg$c67","peg$parseanchor_with_name_options","peg$c68","peg$c69","peg$c70","peg$c71","peg$parseurl","peg$c72","peg$c73","peg$parseglobal_link","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c81","peg$c82","peg$c80","peg$result","peg$startRuleFunctions","peg$startRuleFunction","ps","is_array","is_object","element","splice","groupBy","fn","source","current","slice","x","y","concat","apply","q","h","t","list","newList","a","li","xs","l","c","lns","ts","startRule","hex","ch","toString","toUpperCase","literalEscape","s","replace","classEscape","describeExpectation","expectation","DESCRIBE_EXPECTATION_FNS","describeExpected","j","descriptions","Array","sort","describeFound","literal","class","escapedParts","any","other","SyntaxError","_vueRouter","_vueRouter2","_Index","_Index2","use","base","mode","routes","path","component","meta","title","beforeEach","to","from","next","Component","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","id","staticRenderFns","domProps","on","keyup","$event","_k","_v","innerHTML","_s","_m","src"],"mappings":"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","file":"static/js/app.3a5b8cb6b074629db0d0.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(2);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(13);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _routers = __webpack_require__(9);\n\t\n\tvar _routers2 = _interopRequireDefault(_routers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  router: _routers2.default,\n\t  el: '#app',\n\t  template: '<App/>',\n\t  components: { App: _App2.default }\n\t}); // The Vue build version to load with the `import` command\n\t// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t\n\texports.default = {\n\t  name: 'app'\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _index = __webpack_require__(7);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _markdown = __webpack_require__(6);\n\t\n\tvar _markdown2 = _interopRequireDefault(_markdown);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t\n\tvar regex = /^\\s*(\\-|\\*|\\>)(\\s*)([\\S]+)/g;\n\t// import parser from 'gpkparser'\n\texports.default = {\n\t  name: 'gpk-editor',\n\t  data: function data() {\n\t    return {\n\t      input: _markdown2.default,\n\t      info: {\n\t        line: 0,\n\t        index: 0\n\t      }\n\t    };\n\t  },\n\t\n\t  computed: {\n\t    compiledMarkdown: function compiledMarkdown() {\n\t      return (0, _index2.default)(this.input);\n\t    }\n\t  },\n\t  methods: {\n\t    update: function update(e) {\n\t      var _this = this;\n\t\n\t      this.info = getLineNumberAndColumnIndex(e.target);\n\t      setTimeout(function () {\n\t        _this.input = e.target.value;\n\t      });\n\t      console.log(e);\n\t      if (e.keyCode === 13) {\n\t        this.enter(e);\n\t      }\n\t    },\n\t    enter: function enter(e) {\n\t      var array = e.target.value.split('\\n');\n\t      var top = array[this.info.line - 2];\n\t      var result = regex.exec(top);\n\t      if (result === null) {\n\t        return;\n\t      }\n\t      console.log(result);\n\t      var i = result[0].indexOf(result[1]);\n\t      var begin = result[0].substr(0, i + 1) + ' ';\n\t      setTimeout(function () {\n\t        insertAtCursor(e.target, begin);\n\t      }, 300);\n\t    }\n\t  }\n\t};\n\t\n\t\n\tfunction getLineNumberAndColumnIndex(textarea) {\n\t  var textLines = textarea.value.substr(0, textarea.selectionStart).split(\"\\n\");\n\t  var currentLineNumber = textLines.length;\n\t  var currentColumnIndex = textLines[textLines.length - 1].length;\n\t  console.log(\"Current Line Number \" + currentLineNumber + \" Current Column Index \" + currentColumnIndex);\n\t  return {\n\t    line: currentLineNumber,\n\t    index: currentColumnIndex\n\t  };\n\t}\n\t\n\tfunction insertAtCursor(myField, myValue) {\n\t  if (document.selection) {\n\t    //IE support\n\t\n\t    myField.focus();\n\t    sel = document.selection.createRange();\n\t    sel.text = myValue;\n\t    sel.select();\n\t  } else if (myField.selectionStart || myField.selectionStart == '0') {\n\t    //MOZILLA/NETSCAPE support\n\t    var startPos = myField.selectionStart;\n\t    var endPos = myField.selectionEnd;\n\t    var beforeValue = myField.value.substring(0, startPos);\n\t    var afterValue = myField.value.substring(endPos, myField.value.length);\n\t\n\t    myField.value = beforeValue + myValue + afterValue;\n\t\n\t    myField.selectionStart = startPos + myValue.length;\n\t    myField.selectionEnd = startPos + myValue.length;\n\t    myField.focus();\n\t  } else {\n\t    myField.value += myValue;\n\t    myField.focus();\n\t  }\n\t}\n\t\n\tfunction getCursortPosition(ctrl) {\n\t  //获取光标位置函数\n\t  var CaretPos = 0; // IE Support\n\t  if (document.selection) {\n\t    ctrl.focus();\n\t    var Sel = document.selection.createRange();\n\t    Sel.moveStart('character', -ctrl.value.length);\n\t    CaretPos = Sel.text.length;\n\t  }\n\t  // Firefox support\n\t  else if (ctrl.selectionStart || ctrl.selectionStart == '0') CaretPos = ctrl.selectionStart;\n\t  return CaretPos;\n\t}\n\t\n\tfunction setCaretPosition(ctrl, pos) {\n\t  //设置光标位置函数\n\t  if (ctrl.setSelectionRange) {\n\t    ctrl.focus();\n\t    ctrl.setSelectionRange(pos, pos);\n\t  } else if (ctrl.createTextRange) {\n\t    var range = ctrl.createTextRange();\n\t    range.collapse(true);\n\t    range.moveEnd('character', pos);\n\t    range.moveStart('character', pos);\n\t    range.select();\n\t  }\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _GPKEditor = __webpack_require__(14);\n\t\n\tvar _GPKEditor2 = _interopRequireDefault(_GPKEditor);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  name: 'index-view',\n\t  components: {\n\t    'gpk-editor': _GPKEditor2.default\n\t  }\n\t}; //\n\t//\n\t//\n\t//\n\t//\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = \"# Dillinger\\n\\n[![N|Solid](https://cldup.com/dTxpPi9lDf.thumb.png)](https://nodesource.com/products/nsolid)\\n\\nDillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.\\n\\n  - Type some Markdown on the left\\n  - See HTML in the right\\n  - Magic\\n\\n# New Features!\\n\\n  - Import a HTML file and watch it magically convert to Markdown\\n  - Drag and drop images (requires your Dropbox account be linked)\\n\\n\\nYou can also:\\n\\n  - Import and save files from GitHub, Dropbox, Google Drive and One Drive\\n  - Drag and drop markdown and HTML files into Dillinger\\n  - Export documents as Markdown, HTML and PDF\\n\\nMarkdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As [John Gruber] writes on the [Markdown site][df1]\\n\\n> The overriding design goal for Markdown's\\n> formatting syntax is to make it as readable\\n> as possible. The idea is that a\\n> Markdown-formatted document should be\\n> publishable as-is, as plain text, without\\n> looking like it's been marked up with tags\\n> or formatting instructions.\\n\\nThis text you see here is *actually* written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.\\n\\n### Tech\\n\\nDillinger uses a number of open source projects to work properly:\\n\\n* [AngularJS] - HTML enhanced for web apps!\\n* [Ace Editor] - awesome web-based text editor\\n* [markdown-it] - Markdown parser done right. Fast and easy to extend.\\n* [Twitter Bootstrap] - great UI boilerplate for modern web apps\\n* [node.js] - evented I/O for the backend\\n* [Express] - fast node.js network app framework [@tjholowaychuk]\\n* [Gulp] - the streaming build system\\n* [Breakdance](http://breakdance.io) - HTML to Markdown converter\\n* [jQuery] - duh\\n\\nAnd of course Dillinger itself is open source with a [public repository][dill]\\n on GitHub.\\n\\n### Installation\\n\\nDillinger requires [Node.js](https://nodejs.org/) v4+ to run.\\n\\nInstall the dependencies and devDependencies and start the server.\\n\\n```sh\\n$ cd dillinger\\n$ npm install -d\\n$ node app\\n```\\n\\nFor production environments...\\n\\n```sh\\n$ npm install --production\\n$ npm run predeploy\\n$ NODE_ENV=production node app\\n```\\n\\n### Plugins\\n\\nDillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\\n\\n| Plugin | README | haha |\\n| ------ | ------ | ------ |\\n| Dropbox | [plugins/dropbox/README.md] [PlDb] | test |\\n| Github | [plugins/github/README.md] [PlGh] | test |\\n| Google Drive | [plugins/googledrive/README.md] [PlGd] | test |\\n| OneDrive | [plugins/onedrive/README.md] [PlOd] | test |\\n| Medium | [plugins/medium/README.md] [PlMe] | test |\\n| Google Analytics | [plugins/googleanalytics/README.md] [PlGa] | test |\\n\\n\\n### Development\\n\\nWant to contribute? Great!\\n\\nDillinger uses Gulp + Webpack for fast developing.\\nMake a change in your file and instantanously see your updates!\\n\\nOpen your favorite Terminal and run these commands.\\n\\nFirst Tab:\\n\\n```sh\\n$ node app\\n```\\n\\nSecond Tab:\\n\\n```sh\\n$ gulp watch\\n```\\n\\n(optional) Third:\\n\\n```sh\\n$ karma test\\n```\\n#### Building for source\\nFor production release:\\n```sh\\n$ gulp build --prod\\n```\\nGenerating pre-built zip archives for distribution:\\n```sh\\n$ gulp build dist --prod\\n```\\n### Docker\\nDillinger is very easy to install and deploy in a Docker container.\\n\\nBy default, the Docker will expose port 80, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\\n\\n```sh\\ncd dillinger\\ndocker build -t joemccann/dillinger:\\n```\\nThis will create the dillinger image and pull in the necessary dependencies. Be sure to swap out `json.version` with the actual version of Dillinger.\\n\\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 80 of the Docker (or whatever port was exposed in the Dockerfile):\\n\\n```sh\\ndocker run -d -p 8000:8080 --restart=\\\"always\\\" <youruser>/dillinger:\\n```\\n\\nVerify the deployment by navigating to your server address in your preferred browser.\\n\\n```sh\\n127.0.0.1:8000\\n```\\n\\n#### Kubernetes + Google Cloud\\n\\nSee [KUBERNETES.md](https://github.com/joemccann/dillinger/blob/master/KUBERNETES.md)\\n\\n\\n### Todos\\n\\n - Write MOAR Tests\\n - Add Night Mode\\n\\nLicense\\n\\n----\\n\\nMIT\\n\\n\\n**Free Software, Hell Yeah!**\\n\\n[//]: # (These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax)\\n\\n\\n   [dill]: <https://github.com/joemccann/dillinger>\\n   [git-repo-url]: <https://github.com/joemccann/dillinger.git>\\n   [john gruber]: <http://daringfireball.net>\\n   [df1]: <http://daringfireball.net/projects/markdown/>\\n   [markdown-it]: <https://github.com/markdown-it/markdown-it>\\n   [Ace Editor]: <http://ace.ajax.org>\\n   [node.js]: <http://nodejs.org>\\n   [Twitter Bootstrap]: <http://twitter.github.com/bootstrap/>\\n   [jQuery]: <http://jquery.com>\\n   [@tjholowaychuk]: <http://twitter.com/tjholowaychuk>\\n   [express]: <http://expressjs.com>\\n   [AngularJS]: <http://angularjs.org>\\n   [Gulp]: <http://gulpjs.com>\\n\\n   [PlDb]: <https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md>\\n   [PlGh]: <https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md>\\n   [PlGd]: <https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md>\\n   [PlOd]: <https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md>\\n   [PlMe]: <https://github.com/joemccann/dillinger/tree/master/plugins/medium/README.md>\\n   [PlGa]: <https://github.com/RahulHP/dillinger/blob/master/plugins/googleanalytics/README.md>\\n\";\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction parseDom(el) {\n\t  var h_reg = /h\\d+/;\n\t  var dom = '';\n\t  var currentLinks = this;\n\t  switch (el.type) {\n\t    case undefined:\n\t      {\n\t        break;\n\t      }\n\t    case 'p':\n\t      {\n\t\n\t        dom = '<p>' + findChildrens(el, currentLinks) + '</p>' + '\\n';\n\t        break;\n\t      }\n\t    case 'strong':\n\t      {\n\t        var rows = el.content[0].map(function (sub) {\n\t          return sub[0];\n\t        }).join('');\n\t        dom = '<strong>' + rows + '</strong>' + '\\n';\n\t        break;\n\t      }\n\t    case 'em':\n\t      {\n\t        dom = '<em>' + el.content.split(',').join('') + '</em>' + '\\n';\n\t        break;\n\t      }\n\t    case 'code':\n\t      {\n\t        var _rows = el.content[0].map(function (el) {\n\t          return '' + el.content;\n\t        });\n\t        dom = '<pre><code language=' + el.language + '>' + _rows + '</code></pre>';\n\t        break;\n\t      }\n\t    case 'table':\n\t      {\n\t        var mapTable = function mapTable(sub, currentLinks) {\n\t          var result = '';\n\t          sub.forEach(function (subEl) {\n\t            if ((typeof subEl === 'undefined' ? 'undefined' : _typeof(subEl)) === 'object') {\n\t              result += '<td>' + parseDom.call(currentLinks, subEl) + '</td>';\n\t            } else {\n\t              result += '<td>' + subEl + '</td>';\n\t            }\n\t          });\n\t          return result;\n\t        };\n\t        var th = el.th.map(function (el) {\n\t          return '<th>' + el + '</th>';\n\t        }).join('');\n\t        var head = '<thead><tr>' + th + '</tr></thead>';\n\t        var tb = el.content[0].map(function (sub) {\n\t          return '<tr>' + mapTable(sub, currentLinks) + '</tr>';\n\t        }).join('');\n\t        var body = '<tbody>' + tb + '</tbody>';\n\t        dom = '<table>' + head + body + '</table>';\n\t        break;\n\t      }\n\t    case 'a':\n\t      {\n\t        dom = '<a href=' + el.url + '>' + el.content + '</a>';\n\t        break;\n\t      }\n\t    case 'img':\n\t      {\n\t        dom = '<img src=\"' + el.url + '\" alt=' + el.content + '>';\n\t        break;\n\t      }\n\t    case 'a_img':\n\t      {\n\t        dom = '<a href=' + el.url + '>\\n              <img src=\"' + el.img.url + '\" alt=' + el.img.content + '>\\n              </a>';\n\t        break;\n\t      }\n\t    case 'quote_list':\n\t      {\n\t        dom = '<blockquote><p>' + el.content[0][0].map(function (el) {\n\t          return el + '</br>';\n\t        }).join('') + '</p></blockquote>';\n\t        break;\n\t      }\n\t    case 'ul':\n\t      {\n\t        var lis = el.content[0].map(function (sub) {\n\t          return '<li>' + mapList(sub, currentLinks) + '</li>';\n\t        }).join('');\n\t        dom = '<ul>' + lis + '</ul>';\n\t        break;\n\t      }\n\t    case 'hr':\n\t      {\n\t        dom = '<hr>';\n\t        break;\n\t      }\n\t    case 'inline_code':\n\t      {\n\t        dom = '<code>' + el.content.split(',').join('') + '</code>';\n\t        break;\n\t      }\n\t    case h_reg.exec(el.type) && h_reg.exec(el.type).input:\n\t      {\n\t        dom = '<' + el.type + '>' + el.content + '</' + el.type + '>';\n\t        break;\n\t      }\n\t    case 'anchor_with_name':\n\t      {\n\t        var anchor = findLink(currentLinks, el.name);\n\t        if (anchor) {\n\t          dom = '<a href=' + anchor.url + '>' + el.content + '</a>';\n\t        }\n\t        break;\n\t      }\n\t    case 'anchor':\n\t      {\n\t        var _anchor = findLink(currentLinks, el.content);\n\t        if (_anchor) {\n\t          dom = '<a href=' + _anchor.url + '>' + _anchor.content + '</a>';\n\t        }\n\t        break;\n\t      }\n\t    default:\n\t      {\n\t        // console.log(el);\n\t      }\n\t  }\n\t  return dom;\n\t}\n\t\n\tvar mapList = function mapList(sub, currentLinks) {\n\t  var result = '';\n\t  sub.forEach(function (subEl) {\n\t    if ((typeof subEl === 'undefined' ? 'undefined' : _typeof(subEl)) === 'object') {\n\t      result += parseDom.call(currentLinks, subEl);\n\t    } else {\n\t      result += subEl;\n\t    }\n\t  });\n\t  return result;\n\t};\n\t\n\tfunction findChildrens(el, currentLinks) {\n\t  var result = '';\n\t  el.content.forEach(function (sub) {\n\t    result += mapList(sub, currentLinks);\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction findLink(links, name) {\n\t  var result = null;\n\t  links.forEach(function (el) {\n\t    if (el.content.toLowerCase() === name.toLowerCase()) {\n\t      result = el;\n\t      return false;\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction mapAll(el, callback) {\n\t  if (el === '' || el === null || el === undefined) {\n\t    return;\n\t  }\n\t  var buffer = callback(el);\n\t  if ((typeof el === 'undefined' ? 'undefined' : _typeof(el)) === 'object' && el.length > 0) {\n\t    el.forEach(function (sub) {\n\t      mapAll(sub, callback);\n\t    });\n\t  }\n\t}\n\t\n\tmodule.exports = function (input) {\n\t  var p = __webpack_require__(8);\n\t  var markdown = p.parse(input);\n\t  var links = [];\n\t  var dom = '';\n\t  var getLinks = function getLinks(el) {\n\t    if (el.type === 'global_link_list') {\n\t      links = el.content[0];\n\t    }\n\t  };\n\t  var getDom = function getDom(el) {\n\t    dom += parseDom.call(links, el);\n\t  };\n\t  mapAll(markdown, getLinks);\n\t  mapAll(markdown, getDom);\n\t  return dom;\n\t};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tmodule.exports = /*\r\n\t                 * Generated by PEG.js 0.10.0.\r\n\t                 *\r\n\t                 * http://pegjs.org/\r\n\t                 */\n\tfunction () {\n\t  \"use strict\";\n\t\n\t  function peg$subclass(child, parent) {\n\t    function ctor() {\n\t      this.constructor = child;\n\t    }\n\t    ctor.prototype = parent.prototype;\n\t    child.prototype = new ctor();\n\t  }\n\t\n\t  function peg$SyntaxError(message, expected, found, location) {\n\t    this.message = message;\n\t    this.expected = expected;\n\t    this.found = found;\n\t    this.location = location;\n\t    this.name = \"SyntaxError\";\n\t\n\t    if (typeof Error.captureStackTrace === \"function\") {\n\t      Error.captureStackTrace(this, peg$SyntaxError);\n\t    }\n\t  }\n\t\n\t  peg$subclass(peg$SyntaxError, Error);\n\t\n\t  peg$SyntaxError.buildMessage = function (expected, found) {\n\t    var DESCRIBE_EXPECTATION_FNS = {\n\t      literal: function literal(expectation) {\n\t        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n\t      },\n\t\n\t      \"class\": function _class(expectation) {\n\t        var escapedParts = \"\",\n\t            i;\n\t\n\t        for (i = 0; i < expectation.parts.length; i++) {\n\t          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n\t        }\n\t\n\t        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n\t      },\n\t\n\t      any: function any(expectation) {\n\t        return \"any character\";\n\t      },\n\t\n\t      end: function end(expectation) {\n\t        return \"end of input\";\n\t      },\n\t\n\t      other: function other(expectation) {\n\t        return expectation.description;\n\t      }\n\t    };\n\t\n\t    function hex(ch) {\n\t      return ch.charCodeAt(0).toString(16).toUpperCase();\n\t    }\n\t\n\t    function literalEscape(s) {\n\t      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n\t        return '\\\\x0' + hex(ch);\n\t      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n\t        return '\\\\x' + hex(ch);\n\t      });\n\t    }\n\t\n\t    function classEscape(s) {\n\t      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n\t        return '\\\\x0' + hex(ch);\n\t      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n\t        return '\\\\x' + hex(ch);\n\t      });\n\t    }\n\t\n\t    function describeExpectation(expectation) {\n\t      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n\t    }\n\t\n\t    function describeExpected(expected) {\n\t      var descriptions = new Array(expected.length),\n\t          i,\n\t          j;\n\t\n\t      for (i = 0; i < expected.length; i++) {\n\t        descriptions[i] = describeExpectation(expected[i]);\n\t      }\n\t\n\t      descriptions.sort();\n\t\n\t      if (descriptions.length > 0) {\n\t        for (i = 1, j = 1; i < descriptions.length; i++) {\n\t          if (descriptions[i - 1] !== descriptions[i]) {\n\t            descriptions[j] = descriptions[i];\n\t            j++;\n\t          }\n\t        }\n\t        descriptions.length = j;\n\t      }\n\t\n\t      switch (descriptions.length) {\n\t        case 1:\n\t          return descriptions[0];\n\t\n\t        case 2:\n\t          return descriptions[0] + \" or \" + descriptions[1];\n\t\n\t        default:\n\t          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n\t      }\n\t    }\n\t\n\t    function describeFound(found) {\n\t      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n\t    }\n\t\n\t    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n\t  };\n\t\n\t  function peg$parse(input, options) {\n\t    options = options !== void 0 ? options : {};\n\t\n\t    var peg$FAILED = {},\n\t        peg$startRuleFunctions = { markdown: peg$parsemarkdown },\n\t        peg$startRuleFunction = peg$parsemarkdown,\n\t        peg$c0 = function peg$c0(ps) {\n\t      var is_array = function is_array(el) {\n\t        return (typeof el === \"undefined\" ? \"undefined\" : _typeof(el)) === 'object' && el.length > 0;\n\t      };\n\t      var is_object = function is_object(el) {\n\t        return (typeof el === \"undefined\" ? \"undefined\" : _typeof(el)) === 'object';\n\t      };\n\t      var mapAll = function mapAll(element) {\n\t        if (element === undefined) {\n\t          return;\n\t        }\n\t        if (is_array(element)) {\n\t          element.forEach(function (el, index) {\n\t            if (el === undefined) {\n\t              element.splice(index, 1);\n\t            } else {\n\t              mapAll(el);\n\t            }\n\t          });\n\t        } else if (is_object(element)) {\n\t          mapAll(element.content);\n\t        }\n\t      };\n\t\n\t      var groupBy = function groupBy(fn, source) {\n\t        var result = [];\n\t        var current = 0;\n\t        if (source === undefined || (typeof source === \"undefined\" ? \"undefined\" : _typeof(source)) !== 'object' || source.length === undefined) {\n\t          return;\n\t        }\n\t        source.forEach(function (el, index) {\n\t          if (!fn(el, source[index + 1])) {\n\t            result.push(source.slice(current, index + 1));\n\t            current = index + 1;\n\t          }\n\t        });\n\t        return result;\n\t      };\n\t\n\t      var fn = function fn(x, y) {\n\t        return (typeof x === \"undefined\" ? \"undefined\" : _typeof(x)) === (typeof y === \"undefined\" ? \"undefined\" : _typeof(y));\n\t      };\n\t      ps.forEach(function (x) {\n\t        x.content = groupBy(fn, x.content);\n\t        if (x.content) {\n\t          x.content = x.content.map(function (el) {\n\t            if (_typeof(el[0]) === 'object') {\n\t              return el.map(function (sub) {\n\t                if (_typeof(sub.content) === 'object') {\n\t                  sub.content = sub.content.join('');\n\t                }\n\t                return sub;\n\t              });\n\t            }\n\t            return [el.join('')];\n\t          });\n\t          x.content = [].concat.apply(x.content);\n\t          mapAll(x.content);\n\t        }\n\t      });\n\t      return ps;\n\t    },\n\t        peg$c1 = function peg$c1(p) {\n\t\n\t      return p[1];\n\t    },\n\t        peg$c2 = function peg$c2(q) {\n\t      return { type: 'quote', content: q };\n\t    },\n\t        peg$c3 = function peg$c3(x) {\n\t      return { type: 'p', content: x };\n\t    },\n\t        peg$c4 = \"#\",\n\t        peg$c5 = peg$literalExpectation(\"#\", false),\n\t        peg$c6 = \" \",\n\t        peg$c7 = peg$literalExpectation(\" \", false),\n\t        peg$c8 = function peg$c8(h, t) {\n\t      return { type: 'h' + h.length, content: t };\n\t    },\n\t        peg$c9 = \"> \",\n\t        peg$c10 = peg$literalExpectation(\"> \", false),\n\t        peg$c11 = function peg$c11(t) {\n\t      return t;\n\t    },\n\t        peg$c12 = function peg$c12(q, list) {\n\t      var newList = [q].concat(list.map(function (a) {\n\t        return a[1];\n\t      })).map(function (el) {\n\t        return el.join(\"\");\n\t      });\n\t      return { type: 'quote_list', content: [newList] };\n\t    },\n\t        peg$c13 = function peg$c13(tb) {\n\t      return { type: 'table', th: tb[0], content: tb.splice(2, tb.length) };\n\t    },\n\t        peg$c14 = \"|\",\n\t        peg$c15 = peg$literalExpectation(\"|\", false),\n\t        peg$c16 = \"\\n\",\n\t        peg$c17 = peg$literalExpectation(\"\\n\", false),\n\t        peg$c18 = function peg$c18(x) {\n\t      return x;\n\t    },\n\t        peg$c19 = function peg$c19(t) {\n\t      return t[1];\n\t    },\n\t        peg$c20 = /^[^|]/,\n\t        peg$c21 = peg$classExpectation([\"|\"], true, false),\n\t        peg$c22 = function peg$c22(x) {\n\t      return x.join('');\n\t    },\n\t        peg$c23 = \"- \",\n\t        peg$c24 = peg$literalExpectation(\"- \", false),\n\t        peg$c25 = \"* \",\n\t        peg$c26 = peg$literalExpectation(\"* \", false),\n\t        peg$c27 = function peg$c27(t) {\n\t      return { type: 'li', li: t };\n\t    },\n\t        peg$c28 = function peg$c28(xs) {\n\t      var rows = xs.map(function (el) {\n\t        return el[1].li;\n\t      });\n\t      return { type: 'ul', content: rows };\n\t    },\n\t        peg$c29 = \"![\",\n\t        peg$c30 = peg$literalExpectation(\"![\", false),\n\t        peg$c31 = \"](\",\n\t        peg$c32 = peg$literalExpectation(\"](\", false),\n\t        peg$c33 = \")\",\n\t        peg$c34 = peg$literalExpectation(\")\", false),\n\t        peg$c35 = function peg$c35(t, url) {\n\t      return { type: 'img', url: url, content: t };\n\t    },\n\t        peg$c36 = \"[\",\n\t        peg$c37 = peg$literalExpectation(\"[\", false),\n\t        peg$c38 = function peg$c38(t, url) {\n\t      return { type: 'a', url: url, content: t };\n\t    },\n\t        peg$c39 = function peg$c39(i, url) {\n\t      return { type: 'a_img', url: url, img: i };\n\t    },\n\t        peg$c40 = /^[a-zA-Z0-9|:\\/.!]/,\n\t        peg$c41 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"|\", \":\", \"/\", \".\", \"!\"], false, false),\n\t        peg$c42 = \"[//]:\",\n\t        peg$c43 = peg$literalExpectation(\"[//]:\", false),\n\t        peg$c44 = function peg$c44(t) {\n\t      return { type: 'annotation', content: t };\n\t    },\n\t        peg$c45 = \"-\",\n\t        peg$c46 = peg$literalExpectation(\"-\", false),\n\t        peg$c47 = function peg$c47() {\n\t      return { type: 'hr', content: \"\" };\n\t    },\n\t        peg$c48 = \"```\",\n\t        peg$c49 = peg$literalExpectation(\"```\", false),\n\t        peg$c50 = function peg$c50(l, c) {\n\t      return { type: 'code', content: [c], language: l };\n\t    },\n\t        peg$c51 = function peg$c51(rows) {\n\t      return { type: 'code_rows', content: rows };\n\t    },\n\t        peg$c52 = /^[^`\\n]/,\n\t        peg$c53 = peg$classExpectation([\"`\", \"\\n\"], true, false),\n\t        peg$c54 = function peg$c54(lns) {\n\t      return lns[0][0];\n\t    },\n\t        peg$c55 = /^[^\\n]/,\n\t        peg$c56 = peg$classExpectation([\"\\n\"], true, false),\n\t        peg$c57 = \"**\",\n\t        peg$c58 = peg$literalExpectation(\"**\", false),\n\t        peg$c59 = function peg$c59(t) {\n\t      return { type: 'strong', content: t };\n\t    },\n\t        peg$c60 = \"*\",\n\t        peg$c61 = peg$literalExpectation(\"*\", false),\n\t        peg$c62 = function peg$c62(t) {\n\t      return { type: 'em', content: [t] };\n\t    },\n\t        peg$c63 = \"`\",\n\t        peg$c64 = peg$literalExpectation(\"`\", false),\n\t        peg$c65 = function peg$c65(t) {\n\t      return { type: 'inline_code', content: t };\n\t    },\n\t        peg$c66 = \"]\",\n\t        peg$c67 = peg$literalExpectation(\"]\", false),\n\t        peg$c68 = \"][\",\n\t        peg$c69 = peg$literalExpectation(\"][\", false),\n\t        peg$c70 = function peg$c70(t, name) {\n\t      return { type: \"anchor_with_name\", content: t.split(\",\").join(\"\"), name: name.split(\",\").join(\"\") };\n\t    },\n\t        peg$c71 = function peg$c71(t) {\n\t\n\t      return { type: \"anchor\", content: t.split(\",\").join(\"\") };\n\t    },\n\t        peg$c72 = /^[a-zA-Z0-9|:\\/.!\\-]/,\n\t        peg$c73 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"|\", \":\", \"/\", \".\", \"!\", \"-\"], false, false),\n\t        peg$c74 = \"]: <\",\n\t        peg$c75 = peg$literalExpectation(\"]: <\", false),\n\t        peg$c76 = \">\",\n\t        peg$c77 = peg$literalExpectation(\">\", false),\n\t        peg$c78 = function peg$c78(t, url) {\n\t      return { type: 'global_link', content: [t.split(',').join('')], url: url };\n\t    },\n\t        peg$c79 = function peg$c79(ts) {\n\t      return { type: 'global_link_list', content: ts.map(function (el) {\n\t          return el[1];\n\t        }) };\n\t    },\n\t        peg$c80 = peg$otherExpectation(\"whitespace\"),\n\t        peg$c81 = /^[ \\t\\n\\r]/,\n\t        peg$c82 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\t        peg$c83 = /^[ \\t\\r]/,\n\t        peg$c84 = peg$classExpectation([\" \", \"\\t\", \"\\r\"], false, false),\n\t        peg$currPos = 0,\n\t        peg$savedPos = 0,\n\t        peg$posDetailsCache = [{ line: 1, column: 1 }],\n\t        peg$maxFailPos = 0,\n\t        peg$maxFailExpected = [],\n\t        peg$silentFails = 0,\n\t        peg$result;\n\t\n\t    if (\"startRule\" in options) {\n\t      if (!(options.startRule in peg$startRuleFunctions)) {\n\t        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n\t      }\n\t\n\t      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n\t    }\n\t\n\t    function text() {\n\t      return input.substring(peg$savedPos, peg$currPos);\n\t    }\n\t\n\t    function location() {\n\t      return peg$computeLocation(peg$savedPos, peg$currPos);\n\t    }\n\t\n\t    function expected(description, location) {\n\t      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\t\n\t      throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n\t    }\n\t\n\t    function error(message, location) {\n\t      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\t\n\t      throw peg$buildSimpleError(message, location);\n\t    }\n\t\n\t    function peg$literalExpectation(text, ignoreCase) {\n\t      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n\t    }\n\t\n\t    function peg$classExpectation(parts, inverted, ignoreCase) {\n\t      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n\t    }\n\t\n\t    function peg$anyExpectation() {\n\t      return { type: \"any\" };\n\t    }\n\t\n\t    function peg$endExpectation() {\n\t      return { type: \"end\" };\n\t    }\n\t\n\t    function peg$otherExpectation(description) {\n\t      return { type: \"other\", description: description };\n\t    }\n\t\n\t    function peg$computePosDetails(pos) {\n\t      var details = peg$posDetailsCache[pos],\n\t          p;\n\t\n\t      if (details) {\n\t        return details;\n\t      } else {\n\t        p = pos - 1;\n\t        while (!peg$posDetailsCache[p]) {\n\t          p--;\n\t        }\n\t\n\t        details = peg$posDetailsCache[p];\n\t        details = {\n\t          line: details.line,\n\t          column: details.column\n\t        };\n\t\n\t        while (p < pos) {\n\t          if (input.charCodeAt(p) === 10) {\n\t            details.line++;\n\t            details.column = 1;\n\t          } else {\n\t            details.column++;\n\t          }\n\t\n\t          p++;\n\t        }\n\t\n\t        peg$posDetailsCache[pos] = details;\n\t        return details;\n\t      }\n\t    }\n\t\n\t    function peg$computeLocation(startPos, endPos) {\n\t      var startPosDetails = peg$computePosDetails(startPos),\n\t          endPosDetails = peg$computePosDetails(endPos);\n\t\n\t      return {\n\t        start: {\n\t          offset: startPos,\n\t          line: startPosDetails.line,\n\t          column: startPosDetails.column\n\t        },\n\t        end: {\n\t          offset: endPos,\n\t          line: endPosDetails.line,\n\t          column: endPosDetails.column\n\t        }\n\t      };\n\t    }\n\t\n\t    function peg$fail(expected) {\n\t      if (peg$currPos < peg$maxFailPos) {\n\t        return;\n\t      }\n\t\n\t      if (peg$currPos > peg$maxFailPos) {\n\t        peg$maxFailPos = peg$currPos;\n\t        peg$maxFailExpected = [];\n\t      }\n\t\n\t      peg$maxFailExpected.push(expected);\n\t    }\n\t\n\t    function peg$buildSimpleError(message, location) {\n\t      return new peg$SyntaxError(message, null, null, location);\n\t    }\n\t\n\t    function peg$buildStructuredError(expected, found, location) {\n\t      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n\t    }\n\t\n\t    function peg$parsemarkdown() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$parseparagraph();\n\t      while (s2 !== peg$FAILED) {\n\t        s1.push(s2);\n\t        s2 = peg$parseparagraph();\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c0(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseparagraph() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = peg$parse_();\n\t      if (s2 !== peg$FAILED) {\n\t        s3 = peg$parseparagraph_content();\n\t        if (s3 !== peg$FAILED) {\n\t          s4 = peg$parse_();\n\t          if (s4 !== peg$FAILED) {\n\t            s2 = [s2, s3, s4];\n\t            s1 = s2;\n\t          } else {\n\t            peg$currPos = s1;\n\t            s1 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s1;\n\t          s1 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s1;\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c1(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseparagraph_content() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$parseheading();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parseglobal_link_list();\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$parsequote_list();\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$currPos;\n\t            s1 = peg$parsequote();\n\t            if (s1 !== peg$FAILED) {\n\t              peg$savedPos = s0;\n\t              s1 = peg$c2(s1);\n\t            }\n\t            s0 = s1;\n\t            if (s0 === peg$FAILED) {\n\t              s0 = peg$parsecode();\n\t              if (s0 === peg$FAILED) {\n\t                s0 = peg$parseul_list();\n\t                if (s0 === peg$FAILED) {\n\t                  s0 = peg$parseul_li();\n\t                  if (s0 === peg$FAILED) {\n\t                    s0 = peg$parsetable();\n\t                    if (s0 === peg$FAILED) {\n\t                      s0 = peg$parsea_img();\n\t                      if (s0 === peg$FAILED) {\n\t                        s0 = peg$parsea();\n\t                        if (s0 === peg$FAILED) {\n\t                          s0 = peg$parseimg();\n\t                          if (s0 === peg$FAILED) {\n\t                            s0 = peg$parseline();\n\t                            if (s0 === peg$FAILED) {\n\t                              s0 = peg$parsestrong();\n\t                              if (s0 === peg$FAILED) {\n\t                                s0 = peg$parseannotation();\n\t                                if (s0 === peg$FAILED) {\n\t                                  s0 = peg$currPos;\n\t                                  s1 = peg$parseplain_text_paragraph();\n\t                                  if (s1 !== peg$FAILED) {\n\t                                    peg$savedPos = s0;\n\t                                    s1 = peg$c3(s1);\n\t                                  }\n\t                                  s0 = s1;\n\t                                }\n\t                              }\n\t                            }\n\t                          }\n\t                        }\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseheading() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (input.charCodeAt(peg$currPos) === 35) {\n\t        s2 = peg$c4;\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c5);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (input.charCodeAt(peg$currPos) === 35) {\n\t            s2 = peg$c4;\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c5);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 32) {\n\t          s2 = peg$c6;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c7);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsetext();\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c8(s1, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsequote() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parse_();\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.substr(peg$currPos, 2) === peg$c9) {\n\t          s2 = peg$c9;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c10);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsetext();\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c11(s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsequote_list() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsequote();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$parse_();\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parsequote();\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$currPos;\n\t            s4 = peg$parse_();\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parsequote();\n\t              if (s5 !== peg$FAILED) {\n\t                s4 = [s4, s5];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c12(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetable() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parse_();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$parsetable_tr();\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$parsetable_tr();\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parse_();\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c13(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetable_tr() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 124) {\n\t        s1 = peg$c14;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c15);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$parsetable_item();\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$parsetable_item();\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 10) {\n\t            s3 = peg$c16;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c17);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c18(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetable_item() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = peg$parse_();\n\t      if (s2 !== peg$FAILED) {\n\t        s3 = peg$parsetable_text_formated();\n\t        if (s3 !== peg$FAILED) {\n\t          s4 = peg$parse_();\n\t          if (s4 !== peg$FAILED) {\n\t            s2 = [s2, s3, s4];\n\t            s1 = s2;\n\t          } else {\n\t            peg$currPos = s1;\n\t            s1 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s1;\n\t          s1 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s1;\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 124) {\n\t          s2 = peg$c14;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c15);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c19(s1);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetable_text_formated() {\n\t      var s0;\n\t\n\t      s0 = peg$parseformated_text();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parsetable_text();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetable_text() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c20.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c21);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c20.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c21);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c22(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseul_li_item() {\n\t      var s0;\n\t\n\t      if (input.substr(peg$currPos, 2) === peg$c23) {\n\t        s0 = peg$c23;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s0 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c24);\n\t        }\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        if (input.substr(peg$currPos, 2) === peg$c25) {\n\t          s0 = peg$c25;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s0 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c26);\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseul_li() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseul_li_item();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsetext();\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c27(s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseul_list() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$currPos;\n\t      s3 = peg$parse_();\n\t      if (s3 !== peg$FAILED) {\n\t        s4 = peg$parseul_li();\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parse_();\n\t          if (s5 !== peg$FAILED) {\n\t            s3 = [s3, s4, s5];\n\t            s2 = s3;\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s2;\n\t        s2 = peg$FAILED;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$currPos;\n\t          s3 = peg$parse_();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parseul_li();\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parse_();\n\t              if (s5 !== peg$FAILED) {\n\t                s3 = [s3, s4, s5];\n\t                s2 = s3;\n\t              } else {\n\t                peg$currPos = s2;\n\t                s2 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s2;\n\t              s2 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c28(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseimg() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c29) {\n\t        s1 = peg$c29;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c30);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsea_img_text();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 2) === peg$c31) {\n\t            s3 = peg$c31;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c32);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsea_img_text();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 41) {\n\t                s5 = peg$c33;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c34);\n\t                }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$savedPos = s0;\n\t                s1 = peg$c35(s2, s4);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsea() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c36;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c37);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsea_img_text();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 2) === peg$c31) {\n\t            s3 = peg$c31;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c32);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsea_img_text();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 41) {\n\t                s5 = peg$c33;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c34);\n\t                }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$savedPos = s0;\n\t                s1 = peg$c38(s2, s4);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsea_img() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c36;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c37);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseimg();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 2) === peg$c31) {\n\t            s3 = peg$c31;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c32);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsea_img_text();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 41) {\n\t                s5 = peg$c33;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c34);\n\t                }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$savedPos = s0;\n\t                s1 = peg$c39(s2, s4);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsea_img_text() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c40.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c41);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c40.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c41);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c22(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseannotation() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parse_();\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.substr(peg$currPos, 5) === peg$c42) {\n\t          s2 = peg$c42;\n\t          peg$currPos += 5;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c43);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parse_();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsetext();\n\t            if (s4 !== peg$FAILED) {\n\t              peg$savedPos = s0;\n\t              s1 = peg$c44(s4);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseline() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parse_();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        if (input.charCodeAt(peg$currPos) === 45) {\n\t          s3 = peg$c45;\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c46);\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            if (input.charCodeAt(peg$currPos) === 45) {\n\t              s3 = peg$c45;\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c46);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parse_();\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c47();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecode() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 3) === peg$c48) {\n\t        s1 = peg$c48;\n\t        peg$currPos += 3;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c49);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsetext();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 10) {\n\t            s3 = peg$c16;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c17);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsecode_rows();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.substr(peg$currPos, 3) === peg$c48) {\n\t                s5 = peg$c48;\n\t                peg$currPos += 3;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c49);\n\t                }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$savedPos = s0;\n\t                s1 = peg$c50(s2, s4);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecode_rows() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$currPos;\n\t      s3 = peg$parsecode_rows_text();\n\t      if (s3 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 10) {\n\t          s4 = peg$c16;\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c17);\n\t          }\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          s3 = [s3, s4];\n\t          s2 = s3;\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s2;\n\t        s2 = peg$FAILED;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$currPos;\n\t          s3 = peg$parsecode_rows_text();\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 10) {\n\t              s4 = peg$c16;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c17);\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s3 = [s3, s4];\n\t              s2 = s3;\n\t            } else {\n\t              peg$currPos = s2;\n\t              s2 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c51(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecode_rows_text() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c52.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c53);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c52.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c53);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c22(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseplain_text_paragraph() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$currPos;\n\t      s3 = peg$parsetext();\n\t      if (s3 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 10) {\n\t          s4 = peg$c16;\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c17);\n\t          }\n\t        }\n\t        if (s4 === peg$FAILED) {\n\t          s4 = null;\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          s3 = [s3, s4];\n\t          s2 = s3;\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s2;\n\t        s2 = peg$FAILED;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$currPos;\n\t          s3 = peg$parsetext();\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 10) {\n\t              s4 = peg$c16;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c17);\n\t              }\n\t            }\n\t            if (s4 === peg$FAILED) {\n\t              s4 = null;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s3 = [s3, s4];\n\t              s2 = s3;\n\t            } else {\n\t              peg$currPos = s2;\n\t              s2 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c54(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetext_single() {\n\t      var s0;\n\t\n\t      s0 = peg$parseformated_text();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parsenormal_text();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsetext() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$parsetext_single();\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$parsetext_single();\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c18(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsenormal_text() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (peg$c55.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c56);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c18(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseformated_text() {\n\t      var s0;\n\t\n\t      s0 = peg$parsea();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parseanchor_with_name();\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$parseanchor();\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$parseinline_code();\n\t            if (s0 === peg$FAILED) {\n\t              s0 = peg$parseimg();\n\t              if (s0 === peg$FAILED) {\n\t                s0 = peg$parsea_img();\n\t                if (s0 === peg$FAILED) {\n\t                  s0 = peg$parsestrong();\n\t                  if (s0 === peg$FAILED) {\n\t                    s0 = peg$parseem();\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsestrong() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c57) {\n\t        s1 = peg$c57;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c58);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$currPos;\n\t        peg$silentFails++;\n\t        if (input.substr(peg$currPos, 2) === peg$c57) {\n\t          s5 = peg$c57;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s5 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c58);\n\t          }\n\t        }\n\t        peg$silentFails--;\n\t        if (s5 === peg$FAILED) {\n\t          s4 = void 0;\n\t        } else {\n\t          peg$currPos = s4;\n\t          s4 = peg$FAILED;\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parsetext_single();\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$currPos;\n\t            s4 = peg$currPos;\n\t            peg$silentFails++;\n\t            if (input.substr(peg$currPos, 2) === peg$c57) {\n\t              s5 = peg$c57;\n\t              peg$currPos += 2;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c58);\n\t              }\n\t            }\n\t            peg$silentFails--;\n\t            if (s5 === peg$FAILED) {\n\t              s4 = void 0;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parsetext_single();\n\t              if (s5 !== peg$FAILED) {\n\t                s4 = [s4, s5];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 2) === peg$c57) {\n\t            s3 = peg$c57;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c58);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c59(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseem() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 42) {\n\t        s1 = peg$c60;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c61);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$currPos;\n\t        peg$silentFails++;\n\t        if (input.charCodeAt(peg$currPos) === 42) {\n\t          s5 = peg$c60;\n\t          peg$currPos++;\n\t        } else {\n\t          s5 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c61);\n\t          }\n\t        }\n\t        peg$silentFails--;\n\t        if (s5 === peg$FAILED) {\n\t          s4 = void 0;\n\t        } else {\n\t          peg$currPos = s4;\n\t          s4 = peg$FAILED;\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parsetext_single();\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$currPos;\n\t            s4 = peg$currPos;\n\t            peg$silentFails++;\n\t            if (input.charCodeAt(peg$currPos) === 42) {\n\t              s5 = peg$c60;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c61);\n\t              }\n\t            }\n\t            peg$silentFails--;\n\t            if (s5 === peg$FAILED) {\n\t              s4 = void 0;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parsetext_single();\n\t              if (s5 !== peg$FAILED) {\n\t                s4 = [s4, s5];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 42) {\n\t            s3 = peg$c60;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c61);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c62(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseinline_code() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 96) {\n\t        s1 = peg$c63;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c64);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$currPos;\n\t        peg$silentFails++;\n\t        if (input.charCodeAt(peg$currPos) === 96) {\n\t          s5 = peg$c63;\n\t          peg$currPos++;\n\t        } else {\n\t          s5 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c64);\n\t          }\n\t        }\n\t        peg$silentFails--;\n\t        if (s5 === peg$FAILED) {\n\t          s4 = void 0;\n\t        } else {\n\t          peg$currPos = s4;\n\t          s4 = peg$FAILED;\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parsetext_single();\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$currPos;\n\t            s4 = peg$currPos;\n\t            peg$silentFails++;\n\t            if (input.charCodeAt(peg$currPos) === 96) {\n\t              s5 = peg$c63;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c64);\n\t              }\n\t            }\n\t            peg$silentFails--;\n\t            if (s5 === peg$FAILED) {\n\t              s4 = void 0;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parsetext_single();\n\t              if (s5 !== peg$FAILED) {\n\t                s4 = [s4, s5];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 96) {\n\t            s3 = peg$c63;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c64);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c65(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseglobal_link_text() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$currPos;\n\t      s3 = peg$currPos;\n\t      peg$silentFails++;\n\t      if (input.charCodeAt(peg$currPos) === 93) {\n\t        s4 = peg$c66;\n\t        peg$currPos++;\n\t      } else {\n\t        s4 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c67);\n\t        }\n\t      }\n\t      peg$silentFails--;\n\t      if (s4 === peg$FAILED) {\n\t        s3 = void 0;\n\t      } else {\n\t        peg$currPos = s3;\n\t        s3 = peg$FAILED;\n\t      }\n\t      if (s3 !== peg$FAILED) {\n\t        s4 = peg$parsetext_single();\n\t        if (s4 !== peg$FAILED) {\n\t          s3 = [s3, s4];\n\t          s2 = s3;\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s2;\n\t        s2 = peg$FAILED;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$currPos;\n\t          s3 = peg$currPos;\n\t          peg$silentFails++;\n\t          if (input.charCodeAt(peg$currPos) === 93) {\n\t            s4 = peg$c66;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c67);\n\t            }\n\t          }\n\t          peg$silentFails--;\n\t          if (s4 === peg$FAILED) {\n\t            s3 = void 0;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsetext_single();\n\t            if (s4 !== peg$FAILED) {\n\t              s3 = [s3, s4];\n\t              s2 = s3;\n\t            } else {\n\t              peg$currPos = s2;\n\t              s2 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c22(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseanchor_with_name_options() {\n\t      var s0, s1, s2, s3;\n\t\n\t      if (input.substr(peg$currPos, 2) === peg$c68) {\n\t        s0 = peg$c68;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s0 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c69);\n\t        }\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 93) {\n\t          s1 = peg$c66;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c67);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parse_();\n\t          if (s2 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 91) {\n\t              s3 = peg$c36;\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c37);\n\t              }\n\t            }\n\t            if (s3 !== peg$FAILED) {\n\t              s1 = [s1, s2, s3];\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseanchor_with_name() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c36;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c37);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseglobal_link_text();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseanchor_with_name_options();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parseglobal_link_text();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 93) {\n\t                s5 = peg$c66;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c67);\n\t                }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$savedPos = s0;\n\t                s1 = peg$c70(s2, s4);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseanchor() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c36;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c37);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseglobal_link_text();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 93) {\n\t            s3 = peg$c66;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c67);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c71(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseurl() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c72.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c73);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c72.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c73);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c22(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseglobal_link() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c36;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c37);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseglobal_link_text();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.substr(peg$currPos, 4) === peg$c74) {\n\t            s3 = peg$c74;\n\t            peg$currPos += 4;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c75);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parseurl();\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 62) {\n\t                s5 = peg$c76;\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c77);\n\t                }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$savedPos = s0;\n\t                s1 = peg$c78(s2, s4);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseglobal_link_list() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$currPos;\n\t      s3 = peg$parse_();\n\t      if (s3 !== peg$FAILED) {\n\t        s4 = peg$parseglobal_link();\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parse_();\n\t          if (s5 !== peg$FAILED) {\n\t            s3 = [s3, s4, s5];\n\t            s2 = s3;\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s2;\n\t        s2 = peg$FAILED;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$currPos;\n\t          s3 = peg$parse_();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parseglobal_link();\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parse_();\n\t              if (s5 !== peg$FAILED) {\n\t                s3 = [s3, s4, s5];\n\t                s2 = s3;\n\t              } else {\n\t                peg$currPos = s2;\n\t                s2 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s2;\n\t              s2 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c79(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parse_() {\n\t      var s0, s1;\n\t\n\t      peg$silentFails++;\n\t      s0 = [];\n\t      if (peg$c81.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c82);\n\t        }\n\t      }\n\t      while (s1 !== peg$FAILED) {\n\t        s0.push(s1);\n\t        if (peg$c81.test(input.charAt(peg$currPos))) {\n\t          s1 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c82);\n\t          }\n\t        }\n\t      }\n\t      peg$silentFails--;\n\t      if (s0 === peg$FAILED) {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c80);\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsespace() {\n\t      var s0, s1;\n\t\n\t      s0 = [];\n\t      if (peg$c83.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c84);\n\t        }\n\t      }\n\t      while (s1 !== peg$FAILED) {\n\t        s0.push(s1);\n\t        if (peg$c83.test(input.charAt(peg$currPos))) {\n\t          s1 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c84);\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    peg$result = peg$startRuleFunction();\n\t\n\t    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n\t      return peg$result;\n\t    } else {\n\t      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n\t        peg$fail(peg$endExpectation());\n\t      }\n\t\n\t      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n\t    }\n\t  }\n\t\n\t  return {\n\t    SyntaxError: peg$SyntaxError,\n\t    parse: peg$parse\n\t  };\n\t}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(2);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(19);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _Index = __webpack_require__(15);\n\t\n\tvar _Index2 = _interopRequireDefault(_Index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar base = 'GPKEDITOR - ';\n\t\n\tvar router = new _vueRouter2.default({\n\t  mode: 'history',\n\t  routes: [{ path: '/',\n\t    component: _Index2.default,\n\t    meta: { title: base + 'Index' }\n\t  }]\n\t});\n\t\n\trouter.beforeEach(function (to, from, next) {\n\t  document.title = to.meta.title;\n\t  next();\n\t});\n\t\n\texports.default = router;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(12)\n\t\n\tvar Component = __webpack_require__(1)(\n\t  /* script */\n\t  __webpack_require__(3),\n\t  /* template */\n\t  __webpack_require__(18),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(11)\n\t\n\tvar Component = __webpack_require__(1)(\n\t  /* script */\n\t  __webpack_require__(4),\n\t  /* template */\n\t  __webpack_require__(17),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(10)\n\t\n\tvar Component = __webpack_require__(1)(\n\t  /* script */\n\t  __webpack_require__(5),\n\t  /* template */\n\t  __webpack_require__(16),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"view\",\n\t    attrs: {\n\t      \"id\": \"index-view\"\n\t    }\n\t  }, [_c('gpk-editor')], 1)\n\t},staticRenderFns: []}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    attrs: {\n\t      \"id\": \"gpk-editor\"\n\t    }\n\t  }, [_c('textarea', {\n\t    staticClass: \"input\",\n\t    domProps: {\n\t      \"value\": _vm.input\n\t    },\n\t    on: {\n\t      \"input\": _vm.update,\n\t      \"keyup\": function($event) {\n\t        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n\t        _vm.enter($event)\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"preview\",\n\t    domProps: {\n\t      \"innerHTML\": _vm._s(_vm.compiledMarkdown)\n\t    }\n\t  })])\n\t},staticRenderFns: []}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    attrs: {\n\t      \"id\": \"app\"\n\t    }\n\t  }, [_vm._m(0), _c('transition', {\n\t    attrs: {\n\t      \"name\": \"fade\"\n\t    }\n\t  }, [_c('router-view')], 1), _vm._m(1)], 1)\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"header\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": \"http://ohusmobs2.bkt.clouddn.com/20170616149758498873692.png\"\n\t    }\n\t  })])\n\t},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"footer\"\n\t  }, [_vm._v(\"©\"), _c('a', {\n\t    attrs: {\n\t      \"src\": \"https://github.com/ericjjj\"\n\t    }\n\t  }, [_vm._v(\"Eric  \")]), _c('a', {\n\t    attrs: {\n\t      \"src\": \"https://github.com/gpkeditor/gpkeditor\"\n\t    }\n\t  }, [_vm._v(\"Github\")]), _vm._v(\" \")])\n\t}]}\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.3a5b8cb6b074629db0d0.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './routers.js'\n\nnew Vue({\n  router,\n  el: '#app',\n  template: '<App/>',\n  components: { App }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template lang=\"jade\">\n#app\n  .header\n    img(src='http://ohusmobs2.bkt.clouddn.com/20170616149758498873692.png')\n  transition(name=\"fade\")\n    router-view\n  .footer\n    | ©\n    a(src='https://github.com/ericjjj') Eric &nbsp\n    a(src='https://github.com/gpkeditor/gpkeditor') Github\n    | &nbsp\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style lang=\"stylus\">\nhtml, body, #app ,.view\n  width 100%\n  height 100%\n  margin 0\n  padding 0\n\n.view\n  width 100%\n#app\n  font-family 'Avenir', Helvetica, Arial, sans-serif\n  -webkit-font-smoothing antialiased\n  -moz-osx-font-smoothing grayscale\n  // text-align center\n  color #2c3e50\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0\n}\n\n.header {\n  margin 50px 5%;\n}\n\n.footer {\n  position: relative;\n  bottom: -60px;\n  padding-bottom 10px\n  text-align center\n  a {\n    color: #A0AABF;\n    text-decoration: none;\n    cursor pointer\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n}\n\n// markdown editor\n\n\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?243e30a6","<template>\n<div id=\"gpk-editor\">\n  <textarea :value=\"input\" @input=\"update\" class=\"input\" @keyup.enter=\"enter\"></textarea>\n  <div v-html=\"compiledMarkdown\" class=\"preview\"></div>\n</div>\n</template>\n\n<script>\nimport parser from '../gpkparser/index.js'\n// import parser from 'gpkparser'\nimport markdown from './markdown.js'\nconst regex = /^\\s*(\\-|\\*|\\>)(\\s*)([\\S]+)/g;\n\n\nexport default {\n  name: 'gpk-editor',\n  data () {\n    return {\n      input: markdown,\n      info: {\n        line: 0,\n        index: 0,\n      }\n    }\n  },\n  computed: {\n    compiledMarkdown: function () {\n      return parser(this.input)\n    }\n  },\n  methods: {\n    update (e) {\n      this.info = getLineNumberAndColumnIndex(e.target)\n      setTimeout(() => {\n        this.input = e.target.value\n      })\n      console.log(e)\n      if (e.keyCode === 13) {\n        this.enter(e)\n      }\n    },\n    enter (e) {\n      const array = e.target.value.split('\\n');\n      const top = array[this.info.line - 2];\n      const result = regex.exec(top);\n      if (result === null) {return;}\n      console.log(result);\n      const i = result[0].indexOf(result[1]);\n      const begin = result[0].substr(0, i+1) + ' ';\n      setTimeout(()=> {\n        insertAtCursor(e.target, begin);\n      },300)\n\n    }\n  }\n}\n\nfunction getLineNumberAndColumnIndex(textarea){\n   var textLines = textarea.value.substr(0, textarea.selectionStart).split(\"\\n\");\n   var currentLineNumber = textLines.length;\n   var currentColumnIndex = textLines[textLines.length-1].length;\n   console.log(\"Current Line Number \"+ currentLineNumber+\" Current Column Index \"+currentColumnIndex );\n   return {\n    line: currentLineNumber,\n    index: currentColumnIndex\n   }\n}\n\nfunction insertAtCursor(myField, myValue) {\n  if (document.selection) {\n      //IE support\n\n      myField.focus();\n      sel = document.selection.createRange();\n      sel.text = myValue;\n      sel.select();\n  } else if (myField.selectionStart || myField.selectionStart == '0') {\n      //MOZILLA/NETSCAPE support\n      var startPos = myField.selectionStart;\n      var endPos = myField.selectionEnd;\n      var beforeValue = myField.value.substring(0, startPos);\n      var afterValue = myField.value.substring(endPos, myField.value.length);\n\n      myField.value = beforeValue + myValue + afterValue;\n\n      myField.selectionStart = startPos + myValue.length;\n      myField.selectionEnd = startPos + myValue.length;\n      myField.focus();\n  } else {\n      myField.value += myValue;\n      myField.focus();\n  }\n}\n\nfunction getCursortPosition (ctrl) {//获取光标位置函数\n    var CaretPos = 0;    // IE Support\n    if (document.selection) {\n    ctrl.focus ();\n        var Sel = document.selection.createRange ();\n        Sel.moveStart ('character', -ctrl.value.length);\n        CaretPos = Sel.text.length;\n    }\n    // Firefox support\n    else if (ctrl.selectionStart || ctrl.selectionStart == '0')\n        CaretPos = ctrl.selectionStart;\n    return (CaretPos);\n}\n\nfunction setCaretPosition(ctrl, pos){//设置光标位置函数\n    if(ctrl.setSelectionRange)\n    {\n        ctrl.focus();\n        ctrl.setSelectionRange(pos,pos);\n    }\n    else if (ctrl.createTextRange) {\n        var range = ctrl.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', pos);\n        range.moveStart('character', pos);\n        range.select();\n    }\n}\n\n</script>\n\n<style lang=\"stylus\">\n\n\ntextarea, .preview {\n  height: 100%;\n  overflow-y: scroll;\n  padding: 20px;\n  width calc(50% - 46px);\n  vertical-align: top;\n  border 1px solid #E1E1E1;\n}\n\n\ntextarea {\n  border: none;\n  border-right: 1px solid #ccc;\n  resize: none;\n  outline: none;\n  background-color: #f6f6f6;\n  font-size: 14px;\n  font-family: 'Monaco', courier, monospace;\n}\n\n.preview {\n  display: inline-block;\n  overflow-x hidden;\n  word-wrap: break-word;\n  word-break: normal;\n}\n\n#gpk-editor {\n  padding 0 5%\n  height 100%\n  p {\n    line-height: 27px;\n  }\n\n  pre {\n    border-color: #D3DAEA;\n    display: block;\n    word-break: break-all;\n    word-wrap: break-word;\n    color: #333;\n    background-color: #f5f7fa;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-bottom: 30px;\n    padding: 0 10px;\n  }\n\n  pre code {\n    color: #f66;\n    padding: 0;\n    font-size: inherit;\n    color: inherit;\n    white-space: pre-wrap;\n    background-color: transparent;\n    border-radius: 0;\n    line-height: 30px;\n  }\n\n\n  blockquote {\n    color: #666666;\n    margin: 0;\n    padding-left: 3em;\n    border-left: 0.5em #EEE solid;\n\n    p {\n      margin: 0px;\n      line-height: 26px;\n    }\n  }\n\n  ul {\n    li {\n      line-height 30px\n      // margin-left 10px\n    }\n  }\n\n  hr {\n    box-sizing: content-box;\n    height: 0;\n  }\n\n  table, table>thead>tr>th, table>thead>tr>td, table>tbody>tr>th, table>tbody>tr>td, table>tfoot>tr>th, table>tfoot>tr>td {\n      border: 1px solid #ddd;\n      padding: 10px;\n  }\n\n  table {\n    border-collapse: collapse;\n  }\n\n  a {\n    color: #A0AABF;\n    text-decoration: underline;\n  }\n\n  code {\n    color: #c7254e;\n    background-color: #f9f2f4;\n    border-radius: 4px;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// GPKEditor.vue?455f8943","<template lang=\"jade\">\n#index-view.view\n  gpk-editor\n</template>\n\n<script>\nimport GPKEditor from '../gpkeditor/GPKEditor.vue'\nexport default {\n  name: 'index-view',\n  components: {\n    'gpk-editor': GPKEditor\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n#index-view\n  text-align left\n\n  img\n    width 200px\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Index.vue?92e2b1c4","\n\nfunction parseDom (el) {\n  const h_reg = /h\\d+/;\n  let dom = '';\n  const currentLinks = this;\n  switch (el.type) {\n    case undefined: {\n      break;\n    }\n    case 'p': {\n\n      dom = '<p>' + findChildrens(el, currentLinks) + '</p>' + '\\n';\n        break;\n    }\n    case 'strong': {\n      const rows = el.content[0].map(sub => sub[0]).join('');\n      dom = '<strong>' + rows + '</strong>' + '\\n';\n        break;\n    }\n    case 'em': {\n      dom = '<em>' + el.content.split(',').join('') + '</em>' + '\\n';\n        break;\n    }\n    case 'code': {\n      let rows = el.content[0].map(el => `${el.content}`);\n      dom = `<pre><code language=${el.language}>${rows}</code></pre>`\n        break;\n    }\n    case 'table': {\n      var mapTable = (sub, currentLinks) => {\n        let result = '';\n        sub.forEach(subEl => {\n          if (typeof subEl === 'object') {\n            result += `<td>${parseDom.call(currentLinks, subEl)}</td>`;\n          } else {\n            result += `<td>${subEl}</td>`;\n          }\n        })\n        return result;\n      }\n      const th = el.th.map(el => `<th>${el}</th>`).join('');\n      const head = `<thead><tr>${th}</tr></thead>`;\n      const tb = el.content[0].map(sub => {\n                    return `<tr>${mapTable(sub, currentLinks)}</tr>`\n                  }).join('');\n      const body = `<tbody>${tb}</tbody>`;\n      dom = `<table>${head}${body}</table>`;\n        break;\n    }\n    case 'a': {\n      dom = `<a href=${el.url}>${el.content}</a>`;\n        break;\n    }\n    case 'img': {\n      dom = `<img src=\"${el.url}\" alt=${el.content}>`;\n        break;\n    }\n    case 'a_img': {\n      dom = `<a href=${el.url}>\n              <img src=\"${el.img.url}\" alt=${el.img.content}>\n              </a>`;\n        break;\n    }\n    case 'quote_list': {\n      dom = `<blockquote><p>${el.content[0][0].map(el => `${el}</br>`).join('')}</p></blockquote>`;\n        break;\n    }\n    case 'ul': {\n      let lis = el.content[0].map(sub => `<li>${mapList(sub,currentLinks)}</li>`).join('');\n      dom = `<ul>${lis}</ul>`;\n        break;\n    }\n    case 'hr': {\n      dom = '<hr>';\n      break;\n    }\n    case 'inline_code': {\n      dom = `<code>${el.content.split(',').join('')}</code>`;\n      break;\n    }\n    case (h_reg.exec(el.type) && h_reg.exec(el.type).input): {\n      dom =  `<${el.type}>${el.content}</${el.type}>`;\n        break;\n    }\n    case 'anchor_with_name': {\n      const anchor = findLink(currentLinks, el.name);\n      if (anchor) {\n        dom = `<a href=${anchor.url}>${el.content}</a>`;\n      }\n      break;\n    }\n    case 'anchor': {\n      const anchor = findLink(currentLinks, el.content);\n      if (anchor) {\n        dom = `<a href=${anchor.url}>${anchor.content}</a>`;\n      }\n      break;\n    }\n    default: {\n      // console.log(el);\n    }\n  }\n  return dom;\n}\n\nvar mapList = (sub, currentLinks) => {\n  let result = ''\n  sub.forEach(subEl => {\n    if (typeof subEl === 'object') {\n      result += parseDom.call(currentLinks, subEl);\n    } else {\n      result += subEl;\n    }\n  })\n  return result;\n}\n\nfunction findChildrens(el, currentLinks) {\n  let result = '';\n  el.content.forEach(sub => {\n    result += mapList(sub, currentLinks);\n  })\n  return result;\n}\n\nfunction findLink (links, name) {\n  let result = null;\n  links.forEach(el => {\n    if (el.content.toLowerCase() === name.toLowerCase()) {\n      result = el;\n      return false;\n    }\n  })\n  return result;\n}\n\nfunction mapAll (el, callback){\n  if (el === '' || el === null || el === undefined) { return; }\n  let buffer = callback(el);\n  if(typeof el === 'object' && el.length > 0 ) {\n    el.forEach(sub => {mapAll(sub, callback);})\n  }\n}\n\nmodule.exports = function (input) {\n  let p = require('./parser.js');\n  let markdown = p.parse(input);\n  let links = [];\n  let dom = '';\n  let getLinks = function (el) {\n    if (el.type === 'global_link_list') {\n      links = el.content[0];\n    }\n  }\n  let getDom = function (el) {\n    dom += parseDom.call(links, el);\n  }\n  mapAll(markdown, getLinks);\n  mapAll(markdown, getDom);\n  return dom;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gpkparser/index.js","module.exports = /*\r\n * Generated by PEG.js 0.10.0.\r\n *\r\n * http://pegjs.org/\r\n */\r\n(function() {\r\n  \"use strict\";\r\n\r\n  function peg$subclass(child, parent) {\r\n    function ctor() { this.constructor = child; }\r\n    ctor.prototype = parent.prototype;\r\n    child.prototype = new ctor();\r\n  }\r\n\r\n  function peg$SyntaxError(message, expected, found, location) {\r\n    this.message  = message;\r\n    this.expected = expected;\r\n    this.found    = found;\r\n    this.location = location;\r\n    this.name     = \"SyntaxError\";\r\n\r\n    if (typeof Error.captureStackTrace === \"function\") {\r\n      Error.captureStackTrace(this, peg$SyntaxError);\r\n    }\r\n  }\r\n\r\n  peg$subclass(peg$SyntaxError, Error);\r\n\r\n  peg$SyntaxError.buildMessage = function(expected, found) {\r\n    var DESCRIBE_EXPECTATION_FNS = {\r\n          literal: function(expectation) {\r\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\r\n          },\r\n\r\n          \"class\": function(expectation) {\r\n            var escapedParts = \"\",\r\n                i;\r\n\r\n            for (i = 0; i < expectation.parts.length; i++) {\r\n              escapedParts += expectation.parts[i] instanceof Array\r\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\r\n                : classEscape(expectation.parts[i]);\r\n            }\r\n\r\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\r\n          },\r\n\r\n          any: function(expectation) {\r\n            return \"any character\";\r\n          },\r\n\r\n          end: function(expectation) {\r\n            return \"end of input\";\r\n          },\r\n\r\n          other: function(expectation) {\r\n            return expectation.description;\r\n          }\r\n        };\r\n\r\n    function hex(ch) {\r\n      return ch.charCodeAt(0).toString(16).toUpperCase();\r\n    }\r\n\r\n    function literalEscape(s) {\r\n      return s\r\n        .replace(/\\\\/g, '\\\\\\\\')\r\n        .replace(/\"/g,  '\\\\\"')\r\n        .replace(/\\0/g, '\\\\0')\r\n        .replace(/\\t/g, '\\\\t')\r\n        .replace(/\\n/g, '\\\\n')\r\n        .replace(/\\r/g, '\\\\r')\r\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\r\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\r\n    }\r\n\r\n    function classEscape(s) {\r\n      return s\r\n        .replace(/\\\\/g, '\\\\\\\\')\r\n        .replace(/\\]/g, '\\\\]')\r\n        .replace(/\\^/g, '\\\\^')\r\n        .replace(/-/g,  '\\\\-')\r\n        .replace(/\\0/g, '\\\\0')\r\n        .replace(/\\t/g, '\\\\t')\r\n        .replace(/\\n/g, '\\\\n')\r\n        .replace(/\\r/g, '\\\\r')\r\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\r\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\r\n    }\r\n\r\n    function describeExpectation(expectation) {\r\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\r\n    }\r\n\r\n    function describeExpected(expected) {\r\n      var descriptions = new Array(expected.length),\r\n          i, j;\r\n\r\n      for (i = 0; i < expected.length; i++) {\r\n        descriptions[i] = describeExpectation(expected[i]);\r\n      }\r\n\r\n      descriptions.sort();\r\n\r\n      if (descriptions.length > 0) {\r\n        for (i = 1, j = 1; i < descriptions.length; i++) {\r\n          if (descriptions[i - 1] !== descriptions[i]) {\r\n            descriptions[j] = descriptions[i];\r\n            j++;\r\n          }\r\n        }\r\n        descriptions.length = j;\r\n      }\r\n\r\n      switch (descriptions.length) {\r\n        case 1:\r\n          return descriptions[0];\r\n\r\n        case 2:\r\n          return descriptions[0] + \" or \" + descriptions[1];\r\n\r\n        default:\r\n          return descriptions.slice(0, -1).join(\", \")\r\n            + \", or \"\r\n            + descriptions[descriptions.length - 1];\r\n      }\r\n    }\r\n\r\n    function describeFound(found) {\r\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\r\n    }\r\n\r\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\r\n  };\r\n\r\n  function peg$parse(input, options) {\r\n    options = options !== void 0 ? options : {};\r\n\r\n    var peg$FAILED = {},\r\n\r\n        peg$startRuleFunctions = { markdown: peg$parsemarkdown },\r\n        peg$startRuleFunction  = peg$parsemarkdown,\r\n\r\n        peg$c0 = function(ps) {\r\n          var is_array = (el) => {\r\n                return (typeof el === 'object' && el.length > 0);\r\n              }\r\n              var is_object = (el) => {\r\n                return typeof el === 'object';\r\n              }\r\n              var mapAll = (element) => {\r\n                if (element === undefined) {return;}\r\n                if (is_array(element)) {\r\n                  element.forEach((el, index) => {\r\n                      if (el === undefined) {\r\n                          element.splice(index, 1);\r\n                        } else {\r\n                          mapAll(el);\r\n                        }\r\n                    })\r\n                } else if (is_object(element)) {\r\n                  mapAll(element.content);\r\n                }\r\n\r\n              }\r\n\r\n               var groupBy = (fn, source) => {\r\n                 var result = [];\r\n                 var current = 0;\r\n                 if(source === undefined || typeof source !== 'object' || source.length === undefined) {return;}\r\n                 source.forEach((el, index) => {\r\n                    if (!fn(el, source[index + 1])) {\r\n                        result.push(source.slice(current, index + 1))\r\n                        current = index + 1;\r\n                      }\r\n                })\r\n                return result;\r\n              }\r\n\r\n              var fn = (x, y) => {return typeof x === typeof y;}\r\n              ps.forEach(x => {\r\n                x.content = groupBy(fn, x.content);\r\n                if(x.content) {\r\n                  x.content = x.content.map(el => {\r\n                    if(typeof el[0] === 'object') {\r\n                      return el.map(sub => {\r\n                          if(typeof sub.content === 'object'){\r\n                              sub.content = sub.content.join('');\r\n                          }\r\n                          return sub;\r\n                        })\r\n                    }\r\n                    return [el.join('')];\r\n                  })\r\n                  x.content = [].concat.apply(x.content);\r\n                  mapAll(x.content);\r\n               }\r\n            })\r\n          return ps\r\n        },\r\n        peg$c1 = function(p) {\r\n\r\n          return p[1];\r\n        },\r\n        peg$c2 = function(q) { return {type: 'quote', content: q} },\r\n        peg$c3 = function(x) {\r\n              return {type: 'p', content:  x}\r\n             },\r\n        peg$c4 = \"#\",\r\n        peg$c5 = peg$literalExpectation(\"#\", false),\r\n        peg$c6 = \" \",\r\n        peg$c7 = peg$literalExpectation(\" \", false),\r\n        peg$c8 = function(h, t) {\r\n          return {type: 'h' + h.length, content: t};\r\n        },\r\n        peg$c9 = \"> \",\r\n        peg$c10 = peg$literalExpectation(\"> \", false),\r\n        peg$c11 = function(t) {\r\n          return t;\r\n        },\r\n        peg$c12 = function(q, list) {\r\n          const newList = [q].concat(list.map(a => a[1])).map(el =>  el.join(\"\"));\r\n          return {type: 'quote_list', content: [newList]};\r\n        },\r\n        peg$c13 = function(tb) {\r\n           return {type: 'table', th: tb[0], content: tb.splice(2, tb.length)};\r\n        },\r\n        peg$c14 = \"|\",\r\n        peg$c15 = peg$literalExpectation(\"|\", false),\r\n        peg$c16 = \"\\n\",\r\n        peg$c17 = peg$literalExpectation(\"\\n\", false),\r\n        peg$c18 = function(x) {\r\n          return x;\r\n        },\r\n        peg$c19 = function(t) {\r\n          return t[1];\r\n        },\r\n        peg$c20 = /^[^|]/,\r\n        peg$c21 = peg$classExpectation([\"|\"], true, false),\r\n        peg$c22 = function(x) {\r\n          return x.join('');\r\n        },\r\n        peg$c23 = \"- \",\r\n        peg$c24 = peg$literalExpectation(\"- \", false),\r\n        peg$c25 = \"* \",\r\n        peg$c26 = peg$literalExpectation(\"* \", false),\r\n        peg$c27 = function(t) {\r\n          return {type: 'li', li: t};\r\n        },\r\n        peg$c28 = function(xs) {\r\n          const rows = xs.map(el => {\r\n            return el[1].li;\r\n          });\r\n          return {type: 'ul', content: rows};\r\n        },\r\n        peg$c29 = \"![\",\r\n        peg$c30 = peg$literalExpectation(\"![\", false),\r\n        peg$c31 = \"](\",\r\n        peg$c32 = peg$literalExpectation(\"](\", false),\r\n        peg$c33 = \")\",\r\n        peg$c34 = peg$literalExpectation(\")\", false),\r\n        peg$c35 = function(t, url) {\r\n          return {type: 'img', url: url, content: t};\r\n        },\r\n        peg$c36 = \"[\",\r\n        peg$c37 = peg$literalExpectation(\"[\", false),\r\n        peg$c38 = function(t, url) {\r\n          return {type: 'a', url: url, content: t};\r\n        },\r\n        peg$c39 = function(i, url) {\r\n          return {type: 'a_img', url: url, img: i};\r\n        },\r\n        peg$c40 = /^[a-zA-Z0-9|:\\/.!]/,\r\n        peg$c41 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"|\", \":\", \"/\", \".\", \"!\"], false, false),\r\n        peg$c42 = \"[//]:\",\r\n        peg$c43 = peg$literalExpectation(\"[//]:\", false),\r\n        peg$c44 = function(t) {\r\n          return {type: 'annotation', content: t};\r\n        },\r\n        peg$c45 = \"-\",\r\n        peg$c46 = peg$literalExpectation(\"-\", false),\r\n        peg$c47 = function() {\r\n          return {type: 'hr', content: \"\"};\r\n        },\r\n        peg$c48 = \"```\",\r\n        peg$c49 = peg$literalExpectation(\"```\", false),\r\n        peg$c50 = function(l, c) {\r\n          return {type:'code', content: [c], language: l};\r\n        },\r\n        peg$c51 = function(rows) {\r\n          return {type:'code_rows', content: rows};\r\n        },\r\n        peg$c52 = /^[^`\\n]/,\r\n        peg$c53 = peg$classExpectation([\"`\", \"\\n\"], true, false),\r\n        peg$c54 = function(lns) {\r\n          return lns[0][0];\r\n        },\r\n        peg$c55 = /^[^\\n]/,\r\n        peg$c56 = peg$classExpectation([\"\\n\"], true, false),\r\n        peg$c57 = \"**\",\r\n        peg$c58 = peg$literalExpectation(\"**\", false),\r\n        peg$c59 = function(t) {\r\n          return {type: 'strong', content: t};\r\n        },\r\n        peg$c60 = \"*\",\r\n        peg$c61 = peg$literalExpectation(\"*\", false),\r\n        peg$c62 = function(t) {\r\n          return {type: 'em', content: [t]};\r\n        },\r\n        peg$c63 = \"`\",\r\n        peg$c64 = peg$literalExpectation(\"`\", false),\r\n        peg$c65 = function(t) {\r\n          return {type: 'inline_code', content: t};\r\n        },\r\n        peg$c66 = \"]\",\r\n        peg$c67 = peg$literalExpectation(\"]\", false),\r\n        peg$c68 = \"][\",\r\n        peg$c69 = peg$literalExpectation(\"][\", false),\r\n        peg$c70 = function(t, name) {\r\n          return {type: \"anchor_with_name\", content: t.split(\",\").join(\"\"), name: name.split(\",\").join(\"\")};\r\n        },\r\n        peg$c71 = function(t) {\r\n\r\n          return {type: \"anchor\", content: t.split(\",\").join(\"\")};\r\n        },\r\n        peg$c72 = /^[a-zA-Z0-9|:\\/.!\\-]/,\r\n        peg$c73 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"|\", \":\", \"/\", \".\", \"!\", \"-\"], false, false),\r\n        peg$c74 = \"]: <\",\r\n        peg$c75 = peg$literalExpectation(\"]: <\", false),\r\n        peg$c76 = \">\",\r\n        peg$c77 = peg$literalExpectation(\">\", false),\r\n        peg$c78 = function(t, url) {\r\n          return {type: 'global_link', content: [t.split(',').join('')], url: url};\r\n        },\r\n        peg$c79 = function(ts) {\r\n          return {type: 'global_link_list', content: ts.map(el => el[1])};\r\n        },\r\n        peg$c80 = peg$otherExpectation(\"whitespace\"),\r\n        peg$c81 = /^[ \\t\\n\\r]/,\r\n        peg$c82 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\r\n        peg$c83 = /^[ \\t\\r]/,\r\n        peg$c84 = peg$classExpectation([\" \", \"\\t\", \"\\r\"], false, false),\r\n\r\n        peg$currPos          = 0,\r\n        peg$savedPos         = 0,\r\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\r\n        peg$maxFailPos       = 0,\r\n        peg$maxFailExpected  = [],\r\n        peg$silentFails      = 0,\r\n\r\n        peg$result;\r\n\r\n    if (\"startRule\" in options) {\r\n      if (!(options.startRule in peg$startRuleFunctions)) {\r\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n      }\r\n\r\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\r\n    }\r\n\r\n    function text() {\r\n      return input.substring(peg$savedPos, peg$currPos);\r\n    }\r\n\r\n    function location() {\r\n      return peg$computeLocation(peg$savedPos, peg$currPos);\r\n    }\r\n\r\n    function expected(description, location) {\r\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\r\n\r\n      throw peg$buildStructuredError(\r\n        [peg$otherExpectation(description)],\r\n        input.substring(peg$savedPos, peg$currPos),\r\n        location\r\n      );\r\n    }\r\n\r\n    function error(message, location) {\r\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\r\n\r\n      throw peg$buildSimpleError(message, location);\r\n    }\r\n\r\n    function peg$literalExpectation(text, ignoreCase) {\r\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\r\n    }\r\n\r\n    function peg$classExpectation(parts, inverted, ignoreCase) {\r\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\r\n    }\r\n\r\n    function peg$anyExpectation() {\r\n      return { type: \"any\" };\r\n    }\r\n\r\n    function peg$endExpectation() {\r\n      return { type: \"end\" };\r\n    }\r\n\r\n    function peg$otherExpectation(description) {\r\n      return { type: \"other\", description: description };\r\n    }\r\n\r\n    function peg$computePosDetails(pos) {\r\n      var details = peg$posDetailsCache[pos], p;\r\n\r\n      if (details) {\r\n        return details;\r\n      } else {\r\n        p = pos - 1;\r\n        while (!peg$posDetailsCache[p]) {\r\n          p--;\r\n        }\r\n\r\n        details = peg$posDetailsCache[p];\r\n        details = {\r\n          line:   details.line,\r\n          column: details.column\r\n        };\r\n\r\n        while (p < pos) {\r\n          if (input.charCodeAt(p) === 10) {\r\n            details.line++;\r\n            details.column = 1;\r\n          } else {\r\n            details.column++;\r\n          }\r\n\r\n          p++;\r\n        }\r\n\r\n        peg$posDetailsCache[pos] = details;\r\n        return details;\r\n      }\r\n    }\r\n\r\n    function peg$computeLocation(startPos, endPos) {\r\n      var startPosDetails = peg$computePosDetails(startPos),\r\n          endPosDetails   = peg$computePosDetails(endPos);\r\n\r\n      return {\r\n        start: {\r\n          offset: startPos,\r\n          line:   startPosDetails.line,\r\n          column: startPosDetails.column\r\n        },\r\n        end: {\r\n          offset: endPos,\r\n          line:   endPosDetails.line,\r\n          column: endPosDetails.column\r\n        }\r\n      };\r\n    }\r\n\r\n    function peg$fail(expected) {\r\n      if (peg$currPos < peg$maxFailPos) { return; }\r\n\r\n      if (peg$currPos > peg$maxFailPos) {\r\n        peg$maxFailPos = peg$currPos;\r\n        peg$maxFailExpected = [];\r\n      }\r\n\r\n      peg$maxFailExpected.push(expected);\r\n    }\r\n\r\n    function peg$buildSimpleError(message, location) {\r\n      return new peg$SyntaxError(message, null, null, location);\r\n    }\r\n\r\n    function peg$buildStructuredError(expected, found, location) {\r\n      return new peg$SyntaxError(\r\n        peg$SyntaxError.buildMessage(expected, found),\r\n        expected,\r\n        found,\r\n        location\r\n      );\r\n    }\r\n\r\n    function peg$parsemarkdown() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseparagraph();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parseparagraph();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c0(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseparagraph() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      s2 = peg$parse_();\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parseparagraph_content();\r\n        if (s3 !== peg$FAILED) {\r\n          s4 = peg$parse_();\r\n          if (s4 !== peg$FAILED) {\r\n            s2 = [s2, s3, s4];\r\n            s1 = s2;\r\n          } else {\r\n            peg$currPos = s1;\r\n            s1 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s1;\r\n          s1 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c1(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseparagraph_content() {\r\n      var s0, s1;\r\n\r\n      s0 = peg$parseheading();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parseglobal_link_list();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parsequote_list();\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$currPos;\r\n            s1 = peg$parsequote();\r\n            if (s1 !== peg$FAILED) {\r\n              peg$savedPos = s0;\r\n              s1 = peg$c2(s1);\r\n            }\r\n            s0 = s1;\r\n            if (s0 === peg$FAILED) {\r\n              s0 = peg$parsecode();\r\n              if (s0 === peg$FAILED) {\r\n                s0 = peg$parseul_list();\r\n                if (s0 === peg$FAILED) {\r\n                  s0 = peg$parseul_li();\r\n                  if (s0 === peg$FAILED) {\r\n                    s0 = peg$parsetable();\r\n                    if (s0 === peg$FAILED) {\r\n                      s0 = peg$parsea_img();\r\n                      if (s0 === peg$FAILED) {\r\n                        s0 = peg$parsea();\r\n                        if (s0 === peg$FAILED) {\r\n                          s0 = peg$parseimg();\r\n                          if (s0 === peg$FAILED) {\r\n                            s0 = peg$parseline();\r\n                            if (s0 === peg$FAILED) {\r\n                              s0 = peg$parsestrong();\r\n                              if (s0 === peg$FAILED) {\r\n                                s0 = peg$parseannotation();\r\n                                if (s0 === peg$FAILED) {\r\n                                  s0 = peg$currPos;\r\n                                  s1 = peg$parseplain_text_paragraph();\r\n                                  if (s1 !== peg$FAILED) {\r\n                                    peg$savedPos = s0;\r\n                                    s1 = peg$c3(s1);\r\n                                  }\r\n                                  s0 = s1;\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseheading() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      if (input.charCodeAt(peg$currPos) === 35) {\r\n        s2 = peg$c4;\r\n        peg$currPos++;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          if (input.charCodeAt(peg$currPos) === 35) {\r\n            s2 = peg$c4;\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 32) {\r\n          s2 = peg$c6;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c7); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parsetext();\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c8(s1, s3);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsequote() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parse_();\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.substr(peg$currPos, 2) === peg$c9) {\r\n          s2 = peg$c9;\r\n          peg$currPos += 2;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parsetext();\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c11(s3);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsequote_list() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsequote();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$currPos;\r\n        s4 = peg$parse_();\r\n        if (s4 !== peg$FAILED) {\r\n          s5 = peg$parsequote();\r\n          if (s5 !== peg$FAILED) {\r\n            s4 = [s4, s5];\r\n            s3 = s4;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s3;\r\n          s3 = peg$FAILED;\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$currPos;\r\n            s4 = peg$parse_();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parsequote();\r\n              if (s5 !== peg$FAILED) {\r\n                s4 = [s4, s5];\r\n                s3 = s4;\r\n              } else {\r\n                peg$currPos = s3;\r\n                s3 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s3;\r\n              s3 = peg$FAILED;\r\n            }\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s1 = peg$c12(s1, s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parse_();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parsetable_tr();\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$parsetable_tr();\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parse_();\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c13(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable_tr() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 124) {\r\n        s1 = peg$c14;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parsetable_item();\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$parsetable_item();\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 10) {\r\n            s3 = peg$c16;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c18(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable_item() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      s2 = peg$parse_();\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parsetable_text_formated();\r\n        if (s3 !== peg$FAILED) {\r\n          s4 = peg$parse_();\r\n          if (s4 !== peg$FAILED) {\r\n            s2 = [s2, s3, s4];\r\n            s1 = s2;\r\n          } else {\r\n            peg$currPos = s1;\r\n            s1 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s1;\r\n          s1 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 124) {\r\n          s2 = peg$c14;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s1 = peg$c19(s1);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable_text_formated() {\r\n      var s0;\r\n\r\n      s0 = peg$parseformated_text();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsetable_text();\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable_text() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      if (peg$c20.test(input.charAt(peg$currPos))) {\r\n        s2 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          if (peg$c20.test(input.charAt(peg$currPos))) {\r\n            s2 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c21); }\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c22(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseul_li_item() {\r\n      var s0;\r\n\r\n      if (input.substr(peg$currPos, 2) === peg$c23) {\r\n        s0 = peg$c23;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        if (input.substr(peg$currPos, 2) === peg$c25) {\r\n          s0 = peg$c25;\r\n          peg$currPos += 2;\r\n        } else {\r\n          s0 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseul_li() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseul_li_item();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsetext();\r\n        if (s2 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s1 = peg$c27(s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseul_list() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$currPos;\r\n      s3 = peg$parse_();\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = peg$parseul_li();\r\n        if (s4 !== peg$FAILED) {\r\n          s5 = peg$parse_();\r\n          if (s5 !== peg$FAILED) {\r\n            s3 = [s3, s4, s5];\r\n            s2 = s3;\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s2;\r\n        s2 = peg$FAILED;\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$currPos;\r\n          s3 = peg$parse_();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parseul_li();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parse_();\r\n              if (s5 !== peg$FAILED) {\r\n                s3 = [s3, s4, s5];\r\n                s2 = s3;\r\n              } else {\r\n                peg$currPos = s2;\r\n                s2 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c28(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseimg() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 2) === peg$c29) {\r\n        s1 = peg$c29;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsea_img_text();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c31) {\r\n            s3 = peg$c31;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsea_img_text();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 41) {\r\n                s5 = peg$c33;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c35(s2, s4);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsea() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c36;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsea_img_text();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c31) {\r\n            s3 = peg$c31;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsea_img_text();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 41) {\r\n                s5 = peg$c33;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c38(s2, s4);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsea_img() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c36;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseimg();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c31) {\r\n            s3 = peg$c31;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsea_img_text();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 41) {\r\n                s5 = peg$c33;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c39(s2, s4);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsea_img_text() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      if (peg$c40.test(input.charAt(peg$currPos))) {\r\n        s2 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          if (peg$c40.test(input.charAt(peg$currPos))) {\r\n            s2 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c22(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseannotation() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parse_();\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.substr(peg$currPos, 5) === peg$c42) {\r\n          s2 = peg$c42;\r\n          peg$currPos += 5;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parse_();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsetext();\r\n            if (s4 !== peg$FAILED) {\r\n              peg$savedPos = s0;\r\n              s1 = peg$c44(s4);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseline() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parse_();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        if (input.charCodeAt(peg$currPos) === 45) {\r\n          s3 = peg$c45;\r\n          peg$currPos++;\r\n        } else {\r\n          s3 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            if (input.charCodeAt(peg$currPos) === 45) {\r\n              s3 = peg$c45;\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c46); }\r\n            }\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parse_();\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c47();\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsecode() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 3) === peg$c48) {\r\n        s1 = peg$c48;\r\n        peg$currPos += 3;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsetext();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 10) {\r\n            s3 = peg$c16;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsecode_rows();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.substr(peg$currPos, 3) === peg$c48) {\r\n                s5 = peg$c48;\r\n                peg$currPos += 3;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c49); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c50(s2, s4);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsecode_rows() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$currPos;\r\n      s3 = peg$parsecode_rows_text();\r\n      if (s3 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 10) {\r\n          s4 = peg$c16;\r\n          peg$currPos++;\r\n        } else {\r\n          s4 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n        }\r\n        if (s4 !== peg$FAILED) {\r\n          s3 = [s3, s4];\r\n          s2 = s3;\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s2;\r\n        s2 = peg$FAILED;\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$currPos;\r\n          s3 = peg$parsecode_rows_text();\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 10) {\r\n              s4 = peg$c16;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s3 = [s3, s4];\r\n              s2 = s3;\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c51(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsecode_rows_text() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      if (peg$c52.test(input.charAt(peg$currPos))) {\r\n        s2 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          if (peg$c52.test(input.charAt(peg$currPos))) {\r\n            s2 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c22(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseplain_text_paragraph() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$currPos;\r\n      s3 = peg$parsetext();\r\n      if (s3 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 10) {\r\n          s4 = peg$c16;\r\n          peg$currPos++;\r\n        } else {\r\n          s4 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n        }\r\n        if (s4 === peg$FAILED) {\r\n          s4 = null;\r\n        }\r\n        if (s4 !== peg$FAILED) {\r\n          s3 = [s3, s4];\r\n          s2 = s3;\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s2;\r\n        s2 = peg$FAILED;\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$currPos;\r\n          s3 = peg$parsetext();\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 10) {\r\n              s4 = peg$c16;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n            }\r\n            if (s4 === peg$FAILED) {\r\n              s4 = null;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s3 = [s3, s4];\r\n              s2 = s3;\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c54(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetext_single() {\r\n      var s0;\r\n\r\n      s0 = peg$parseformated_text();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsenormal_text();\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetext() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parsetext_single();\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parsetext_single();\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c18(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsenormal_text() {\r\n      var s0, s1;\r\n\r\n      s0 = peg$currPos;\r\n      if (peg$c55.test(input.charAt(peg$currPos))) {\r\n        s1 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c18(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseformated_text() {\r\n      var s0;\r\n\r\n      s0 = peg$parsea();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parseanchor_with_name();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parseanchor();\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$parseinline_code();\r\n            if (s0 === peg$FAILED) {\r\n              s0 = peg$parseimg();\r\n              if (s0 === peg$FAILED) {\r\n                s0 = peg$parsea_img();\r\n                if (s0 === peg$FAILED) {\r\n                  s0 = peg$parsestrong();\r\n                  if (s0 === peg$FAILED) {\r\n                    s0 = peg$parseem();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsestrong() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 2) === peg$c57) {\r\n        s1 = peg$c57;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c58); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$currPos;\r\n        s4 = peg$currPos;\r\n        peg$silentFails++;\r\n        if (input.substr(peg$currPos, 2) === peg$c57) {\r\n          s5 = peg$c57;\r\n          peg$currPos += 2;\r\n        } else {\r\n          s5 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c58); }\r\n        }\r\n        peg$silentFails--;\r\n        if (s5 === peg$FAILED) {\r\n          s4 = void 0;\r\n        } else {\r\n          peg$currPos = s4;\r\n          s4 = peg$FAILED;\r\n        }\r\n        if (s4 !== peg$FAILED) {\r\n          s5 = peg$parsetext_single();\r\n          if (s5 !== peg$FAILED) {\r\n            s4 = [s4, s5];\r\n            s3 = s4;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s3;\r\n          s3 = peg$FAILED;\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$currPos;\r\n            s4 = peg$currPos;\r\n            peg$silentFails++;\r\n            if (input.substr(peg$currPos, 2) === peg$c57) {\r\n              s5 = peg$c57;\r\n              peg$currPos += 2;\r\n            } else {\r\n              s5 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c58); }\r\n            }\r\n            peg$silentFails--;\r\n            if (s5 === peg$FAILED) {\r\n              s4 = void 0;\r\n            } else {\r\n              peg$currPos = s4;\r\n              s4 = peg$FAILED;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parsetext_single();\r\n              if (s5 !== peg$FAILED) {\r\n                s4 = [s4, s5];\r\n                s3 = s4;\r\n              } else {\r\n                peg$currPos = s3;\r\n                s3 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s3;\r\n              s3 = peg$FAILED;\r\n            }\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c57) {\r\n            s3 = peg$c57;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c58); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c59(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseem() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 42) {\r\n        s1 = peg$c60;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c61); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$currPos;\r\n        s4 = peg$currPos;\r\n        peg$silentFails++;\r\n        if (input.charCodeAt(peg$currPos) === 42) {\r\n          s5 = peg$c60;\r\n          peg$currPos++;\r\n        } else {\r\n          s5 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\r\n        }\r\n        peg$silentFails--;\r\n        if (s5 === peg$FAILED) {\r\n          s4 = void 0;\r\n        } else {\r\n          peg$currPos = s4;\r\n          s4 = peg$FAILED;\r\n        }\r\n        if (s4 !== peg$FAILED) {\r\n          s5 = peg$parsetext_single();\r\n          if (s5 !== peg$FAILED) {\r\n            s4 = [s4, s5];\r\n            s3 = s4;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s3;\r\n          s3 = peg$FAILED;\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$currPos;\r\n            s4 = peg$currPos;\r\n            peg$silentFails++;\r\n            if (input.charCodeAt(peg$currPos) === 42) {\r\n              s5 = peg$c60;\r\n              peg$currPos++;\r\n            } else {\r\n              s5 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c61); }\r\n            }\r\n            peg$silentFails--;\r\n            if (s5 === peg$FAILED) {\r\n              s4 = void 0;\r\n            } else {\r\n              peg$currPos = s4;\r\n              s4 = peg$FAILED;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parsetext_single();\r\n              if (s5 !== peg$FAILED) {\r\n                s4 = [s4, s5];\r\n                s3 = s4;\r\n              } else {\r\n                peg$currPos = s3;\r\n                s3 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s3;\r\n              s3 = peg$FAILED;\r\n            }\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 42) {\r\n            s3 = peg$c60;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c62(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseinline_code() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 96) {\r\n        s1 = peg$c63;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$currPos;\r\n        s4 = peg$currPos;\r\n        peg$silentFails++;\r\n        if (input.charCodeAt(peg$currPos) === 96) {\r\n          s5 = peg$c63;\r\n          peg$currPos++;\r\n        } else {\r\n          s5 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c64); }\r\n        }\r\n        peg$silentFails--;\r\n        if (s5 === peg$FAILED) {\r\n          s4 = void 0;\r\n        } else {\r\n          peg$currPos = s4;\r\n          s4 = peg$FAILED;\r\n        }\r\n        if (s4 !== peg$FAILED) {\r\n          s5 = peg$parsetext_single();\r\n          if (s5 !== peg$FAILED) {\r\n            s4 = [s4, s5];\r\n            s3 = s4;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s3;\r\n          s3 = peg$FAILED;\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$currPos;\r\n            s4 = peg$currPos;\r\n            peg$silentFails++;\r\n            if (input.charCodeAt(peg$currPos) === 96) {\r\n              s5 = peg$c63;\r\n              peg$currPos++;\r\n            } else {\r\n              s5 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\r\n            }\r\n            peg$silentFails--;\r\n            if (s5 === peg$FAILED) {\r\n              s4 = void 0;\r\n            } else {\r\n              peg$currPos = s4;\r\n              s4 = peg$FAILED;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parsetext_single();\r\n              if (s5 !== peg$FAILED) {\r\n                s4 = [s4, s5];\r\n                s3 = s4;\r\n              } else {\r\n                peg$currPos = s3;\r\n                s3 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s3;\r\n              s3 = peg$FAILED;\r\n            }\r\n          }\r\n        } else {\r\n          s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 96) {\r\n            s3 = peg$c63;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c64); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c65(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseglobal_link_text() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$currPos;\r\n      s3 = peg$currPos;\r\n      peg$silentFails++;\r\n      if (input.charCodeAt(peg$currPos) === 93) {\r\n        s4 = peg$c66;\r\n        peg$currPos++;\r\n      } else {\r\n        s4 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c67); }\r\n      }\r\n      peg$silentFails--;\r\n      if (s4 === peg$FAILED) {\r\n        s3 = void 0;\r\n      } else {\r\n        peg$currPos = s3;\r\n        s3 = peg$FAILED;\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = peg$parsetext_single();\r\n        if (s4 !== peg$FAILED) {\r\n          s3 = [s3, s4];\r\n          s2 = s3;\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s2;\r\n        s2 = peg$FAILED;\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$currPos;\r\n          s3 = peg$currPos;\r\n          peg$silentFails++;\r\n          if (input.charCodeAt(peg$currPos) === 93) {\r\n            s4 = peg$c66;\r\n            peg$currPos++;\r\n          } else {\r\n            s4 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\r\n          }\r\n          peg$silentFails--;\r\n          if (s4 === peg$FAILED) {\r\n            s3 = void 0;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsetext_single();\r\n            if (s4 !== peg$FAILED) {\r\n              s3 = [s3, s4];\r\n              s2 = s3;\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c22(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseanchor_with_name_options() {\r\n      var s0, s1, s2, s3;\r\n\r\n      if (input.substr(peg$currPos, 2) === peg$c68) {\r\n        s0 = peg$c68;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c69); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 93) {\r\n          s1 = peg$c66;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parse_();\r\n          if (s2 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 91) {\r\n              s3 = peg$c36;\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              s1 = [s1, s2, s3];\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseanchor_with_name() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c36;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseglobal_link_text();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parseanchor_with_name_options();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parseglobal_link_text();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 93) {\r\n                s5 = peg$c66;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c70(s2, s4);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseanchor() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c36;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseglobal_link_text();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 93) {\r\n            s3 = peg$c66;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c71(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseurl() {\r\n      var s0, s1, s2;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      if (peg$c72.test(input.charAt(peg$currPos))) {\r\n        s2 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          if (peg$c72.test(input.charAt(peg$currPos))) {\r\n            s2 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c22(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseglobal_link() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c36;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseglobal_link_text();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 4) === peg$c74) {\r\n            s3 = peg$c74;\r\n            peg$currPos += 4;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c75); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parseurl();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 62) {\r\n                s5 = peg$c76;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c77); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c78(s2, s4);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseglobal_link_list() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$currPos;\r\n      s3 = peg$parse_();\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = peg$parseglobal_link();\r\n        if (s4 !== peg$FAILED) {\r\n          s5 = peg$parse_();\r\n          if (s5 !== peg$FAILED) {\r\n            s3 = [s3, s4, s5];\r\n            s2 = s3;\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s2;\r\n        s2 = peg$FAILED;\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$currPos;\r\n          s3 = peg$parse_();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parseglobal_link();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parse_();\r\n              if (s5 !== peg$FAILED) {\r\n                s3 = [s3, s4, s5];\r\n                s2 = s3;\r\n              } else {\r\n                peg$currPos = s2;\r\n                s2 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n          }\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c79(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parse_() {\r\n      var s0, s1;\r\n\r\n      peg$silentFails++;\r\n      s0 = [];\r\n      if (peg$c81.test(input.charAt(peg$currPos))) {\r\n        s1 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\r\n      }\r\n      while (s1 !== peg$FAILED) {\r\n        s0.push(s1);\r\n        if (peg$c81.test(input.charAt(peg$currPos))) {\r\n          s1 = input.charAt(peg$currPos);\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c82); }\r\n        }\r\n      }\r\n      peg$silentFails--;\r\n      if (s0 === peg$FAILED) {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsespace() {\r\n      var s0, s1;\r\n\r\n      s0 = [];\r\n      if (peg$c83.test(input.charAt(peg$currPos))) {\r\n        s1 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\r\n      }\r\n      while (s1 !== peg$FAILED) {\r\n        s0.push(s1);\r\n        if (peg$c83.test(input.charAt(peg$currPos))) {\r\n          s1 = input.charAt(peg$currPos);\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c84); }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    peg$result = peg$startRuleFunction();\r\n\r\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n      return peg$result;\r\n    } else {\r\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n        peg$fail(peg$endExpectation());\r\n      }\r\n\r\n      throw peg$buildStructuredError(\r\n        peg$maxFailExpected,\r\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\r\n        peg$maxFailPos < input.length\r\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\r\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    SyntaxError: peg$SyntaxError,\r\n    parse:       peg$parse\r\n  };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/gpkparser/parser.js","import Vue       from 'vue'\nimport VueRouter from 'vue-router'\nimport Index from './pages/Index.vue'\n\nVue.use(VueRouter)\n\nconst base = 'GPKEDITOR - '\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes: [\n    { path: '/',\n      component: Index,\n      meta: {title: `${base}Index`}\n    }\n    ]\n})\n\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title\n  next()\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./src/routers.js","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../node_modules/vue-loader/lib/style-rewriter?id=data-v-ea470990!stylus-loader?sourceMap!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler?id=data-v-ea470990!../node_modules/vue-loader/lib/template-loader?raw&engine=jade!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 13\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-890ba974!stylus-loader?sourceMap!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./GPKEditor.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./GPKEditor.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-890ba974!../../node_modules/vue-loader/lib/selector?type=template&index=0!./GPKEditor.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/gpkeditor/GPKEditor.vue\n// module id = 14\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-047f31de!stylus-loader?sourceMap!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Index.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Index.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-047f31de!../../node_modules/vue-loader/lib/template-loader?raw&engine=jade!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Index.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Index.vue\n// module id = 15\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"view\",\n    attrs: {\n      \"id\": \"index-view\"\n    }\n  }, [_c('gpk-editor')], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-047f31de!./~/vue-loader/lib/template-loader.js?raw&engine=jade!./~/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Index.vue\n// module id = 16\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"gpk-editor\"\n    }\n  }, [_c('textarea', {\n    staticClass: \"input\",\n    domProps: {\n      \"value\": _vm.input\n    },\n    on: {\n      \"input\": _vm.update,\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.enter($event)\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"preview\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.compiledMarkdown)\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-890ba974!./~/vue-loader/lib/selector.js?type=template&index=0!./src/gpkeditor/GPKEditor.vue\n// module id = 17\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_vm._m(0), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [_c('router-view')], 1), _vm._m(1)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"header\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": \"http://ohusmobs2.bkt.clouddn.com/20170616149758498873692.png\"\n    }\n  })])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"footer\"\n  }, [_vm._v(\"©\"), _c('a', {\n    attrs: {\n      \"src\": \"https://github.com/ericjjj\"\n    }\n  }, [_vm._v(\"Eric  \")]), _c('a', {\n    attrs: {\n      \"src\": \"https://github.com/gpkeditor/gpkeditor\"\n    }\n  }, [_vm._v(\"Github\")]), _vm._v(\" \")])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-ea470990!./~/vue-loader/lib/template-loader.js?raw&engine=jade!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 18\n// module chunks = 1"],"sourceRoot":""}